{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/constant/constant.component.html","./src/app/dashboard/dashboard.component.html","./src/app/editcube/editcube.component.html","./src/app/modalscript/modalscript.component.html","./src/app/newcube/newcube.component.html","./src/app/page/page.component.html","./src/app/parameter/parameter.component.html","./src/app/translator/translator.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constant/constant.component.css","./src/app/constant/constant.component.ts","./src/app/constant/constant.service.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/mock-generators.ts","./src/app/editcube/editcube.component.css","./src/app/editcube/editcube.component.ts","./src/app/editcube/editcube.service.ts","./src/app/export.service.ts","./src/app/generator.service.ts","./src/app/modalscript/modalscript.component.css","./src/app/modalscript/modalscript.component.ts","./src/app/newcube/newcube.component.css","./src/app/newcube/newcube.component.ts","./src/app/newcube/newcube.service.ts","./src/app/page/page.component.css","./src/app/page/page.component.ts","./src/app/page/page.service.ts","./src/app/parameter/parameter.component.css","./src/app/parameter/parameter.component.ts","./src/app/parameter/parameter.service.ts","./src/app/script.service.ts","./src/app/translator/translator.component.css","./src/app/translator/translator.component.ts","./src/app/translator/translator.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav>\\r\\n    <div *ngIf=\\\"showPageName && showCard;\\\">\\r\\n        <span class=\\\"badge badge-secondary\\\">\\r\\n                &nbsp;&nbsp;&nbsp;&nbsp;{{pageTitle}}&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n        </span>\\r\\n    </div>\\r\\n</nav>\\r\\n<div *ngIf=\\\"showCard; else elseBlock\\\">\\r\\n    <section class=\\\"sectionPages\\\">\\r\\n        <article class=\\\"w-100\\\">\\r\\n            <div class=\\\"card w-100 bg-info\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light btn-sm\\\" style=\\\"float: left;\\\" (click)=\\\"goBack()\\\">\\r\\n                        <img alt=\\\"Return Dashboard\\\" title=\\\"Return Dashboard\\\" src=\\\"./assets/btn/btnReturn.png\\\" />\\r\\n                        Dashboard\\r\\n                    </button>                   \\r\\n\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-light btn-sm\\\" style=\\\"float: right;\\\" data-toggle=\\\"modal\\\"\\r\\n                        data-target=\\\"#exampleModalScrollable\\\">\\r\\n                        <img alt=\\\"Open Script\\\" title=\\\"Open Script\\\" src=\\\"./assets/btn/btnSql.png\\\" />\\r\\n                        Generate Script\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" style=\\\"background-color: white;\\\">\\r\\n                    <router-outlet></router-outlet>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </article>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"sectionPopup\\\">\\r\\n        <app-modalscript></app-modalscript>\\r\\n    </section>\\r\\n</div>\\r\\n<ng-template #elseBlock>\\r\\n    <!-- PAINEL DO DASHBOARD -->\\r\\n    <router-outlet></router-outlet>\\r\\n</ng-template>\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n\\r\\n    <div class=\\\"card\\\"  id=\\\"formHeader\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addConstant()\\\">\\r\\n                            <img alt=\\\"Add Parameter\\\" title=\\\"Add Constant\\\" src=\\\"./assets/btn/btnAdd.png\\\" />\\r\\n                            &nbsp; Add Constant\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div class=\\\"form-check text-right\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm\\\">\\r\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\"\\r\\n                                            formControlName=\\\"getcommit\\\" (change)=\\\"generateScript()\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Set Commit?</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"col\\\" hidden>\\r\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2\\\"\\r\\n                                            formControlName=\\\"getbeginend\\\" (change)=\\\"generateScript()\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck2\\\">Set Begin/End?</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div formArrayName=\\\"constant\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let constantItem of constantFormGroup.controls; let i = index;\\\"\\r\\n            style=\\\"margin-bottom: 5px;\\\">\\r\\n\\r\\n            <div [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                    <div class=\\\"row mb-1\\\">\\r\\n                        <div class=\\\"col-sm\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                 <span class=\\\"input-group-text\\\">Sub-Query</span>\\r\\n                                </div>\\r\\n                                <textarea class=\\\"form-control\\\" aria-label=\\\"SubQuery\\\" aria-describedby=\\\"SubQuery\\\"\\r\\n                                    formControlName=\\\"subquery\\\" (change)=\\\"generateScript()\\\" rows=\\\"5\\\" placeholder=\\\"Subquery to get the constant value from the some table.\\\"></textarea>\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                            *ngIf=\\\"!getConstantFormGroup(i).controls['value'].value && getConstantFormGroup(i).controls['subquery'].hasError('required')\\\">\\r\\n                            SubQuery is required!</small>&nbsp;                            \\r\\n                            <small class=\\\"text-danger float-right\\\"><i><u>(Don't set INTO statement)</u></i> </small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row mb-1\\\">\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <div class=\\\"input-group mb-1\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Constant Name</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Constant\\\"\\r\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"constant\\\"\\r\\n                                    (change)=\\\"generateScript()\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getConstantFormGroup(i).controls['constant'].hasError('required')\\\">\\r\\n                                Constant Name is required! </small>&nbsp;\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Value</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Value\\\" (change)=\\\"generateScript()\\\"\\r\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"value\\\" placeholder=\\\"Constant Value\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"!getConstantFormGroup(i).controls['subquery'].value && getConstantFormGroup(i).controls['value'].hasError('required')\\\">\\r\\n                                Value is required! </small>&nbsp;\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-1\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Table</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Table\\\" (change)=\\\"generateScript()\\\"\\r\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"table\\\" placeholder=\\\"Table Name of the value\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getConstantFormGroup(i).controls['table'].hasError('required')\\\">\\r\\n                                Table is required! </small>&nbsp;\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Column</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Column\\\" (change)=\\\"generateScript()\\\"\\r\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"column\\\" placeholder=\\\"Column Name of the value\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getConstantFormGroup(i).controls['column'].hasError('required')\\\">\\r\\n                                Column is required! </small>&nbsp;\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-1\\\">\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Note</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Note\\\"\\r\\n                                    (change)=\\\"generateScript()\\\" aria-describedby=\\\"basic-addon1\\\"\\r\\n                                    formControlName=\\\"observation\\\" >\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getConstantFormGroup(i).controls['observation'].hasError('required')\\\">\\r\\n                                Note is required! </small>&nbsp;\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\">\\r\\n                                        <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\"\\r\\n                                            formControlName=\\\"isreviewed\\\" (change)=\\\"generateScript()\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <label class=\\\"form-control\\\" aria-label=\\\"label with checkbox\\\" readonly>Reviewed\\r\\n                                    Constant?</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card-footer text-right\\\">\\r\\n                    <small class=\\\"text-muted\\\">\\r\\n\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConstant(i)\\\">\\r\\n                            <img alt=\\\"Remove Constant\\\" title=\\\"Remove Constant\\\" src=\\\"./assets/btn/btnRemove.png\\\" />\\r\\n                            &nbsp; Remove Constant\\r\\n                        </button>\\r\\n\\r\\n                    </small>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</form>\"","module.exports = \"<article class=\\\"articleDashboard\\\">\\n    <div class=\\\"card-deck\\\">\\n        <div class=\\\"card bg-info text-white text-center linkPag\\\" *ngFor=\\\"let gen of generatorList\\\"\\n            [routerLink]=\\\"[gen.link]\\\" >\\n            <div class=\\\"card-body\\\">\\n                <strong>{{gen.name | uppercase}}</strong>\\n                <br><br>\\n                <img [src]=\\\"[gen.img]\\\" [alt]=\\\"[gen.name]\\\">\\n                <br><br>\\n            </div>\\n        </div>\\n    </div>\\n</article>\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n\\n    <div class=\\\"card\\\" id=\\\"formHeader\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addColumn()\\\">\\n                            <img alt=\\\"Add Column\\\" title=\\\"Add Column\\\" src=\\\"./assets/btn/btnAdd.png\\\" />\\n                            &nbsp; Add Column\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\\"col-sm\\\">\\n                        <div class=\\\"form-check text-right\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm\\\">\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\"\\n                                            formControlName=\\\"getcommit\\\" (change)=\\\"generateScript()\\\">\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Set Commit?</label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <br>\\n\\n    <div class=\\\"card alert-primary\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row mb-0\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <div class=\\\"input-group mb-1\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">View Name</span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ViewName\\\" aria-describedby=\\\"basic-addon1\\\"\\n                            formControlName=\\\"viewname\\\" (change)=\\\"generateScript()\\\">\\n                    </div>\\n                    <small class=\\\"text-danger\\\" *ngIf=\\\"form.controls['viewname'].hasError('required')\\\">\\n                        View Name is required! </small> &nbsp;\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <br>\\n\\n    <div class=\\\"card bg-light\\\">\\n        <h5 class=\\\"card-header\\\">\\n            Columns\\n        </h5>\\n    </div>\\n\\n    <div formArrayName=\\\"column\\\">\\n        <div class=\\\"card\\\" *ngFor=\\\"let column of columnFormGroup.controls; let i = index;\\\" style=\\\"margin-bottom: 5px;\\\">\\n\\n            <div [formGroupName]=\\\"i\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Column Name</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ColumnName\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"columnname\\\"\\n                                    (change)=\\\"generateScript()\\\" placeholder=\\\"Table-column Name\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['columnname'].hasError('required')\\\">\\n                                Column Name is required! </small> &nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Column Format</label>\\n                                </div>\\n                                <select class=\\\"custom-select\\\" formControlName=\\\"format\\\" (change)=\\\"generateScript()\\\"\\n                                    id=\\\"inputGroupSelect01\\\">\\n                                    <option value=\\\"TX\\\">Text</option>\\n                                    <option value=\\\"dd/MM/yyyy\\\">dd/MM/yyyy</option>\\n                                    <option value=\\\"###\\\">###</option>\\n                                    <option value=\\\"###,###\\\">###,###</option>\\n                                    <option value=\\\"###,###,###.##\\\">###,###,###.##</option>\\n                                    <option value=\\\"dd/MM/yyyy HH:mm:ss\\\">dd/MM/yyyy HH:mm:ss</option>\\n                                    <option value=\\\"HH:mm:ss\\\">HH:mm:ss</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Portuguese</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Portuguese\\\"\\n                                    (change)=\\\"generateScript()\\\" aria-describedby=\\\"basic-addon1\\\"\\n                                    formControlName=\\\"portuguese\\\" placeholder=\\\"Column Name in portuguese\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['portuguese'].hasError('required')\\\">\\n                                Portuguese translate is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">English</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"English\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"english\\\"\\n                                    placeholder=\\\"Column Name in english\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['english'].hasError('required')\\\">\\n                                English translate is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Spanish</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Spanish\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"spanish\\\"\\n                                    placeholder=\\\"Column Name in spanish\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['spanish'].hasError('required')\\\">\\n                                Spanish translate is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Previous column</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ColumnBefore\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"columnbefore\\\"\\n                                    (change)=\\\"generateScript()\\\" placeholder=\\\"Previous Table-column Name\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"card-footer text-right\\\">\\n                    <small class=\\\"text-muted\\\">\\n\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeColumn(i)\\\">\\n                            <img alt=\\\"Remove Column\\\" title=\\\"Remove Column\\\" src=\\\"./assets/btn/btnRemove.png\\\" />\\n                            &nbsp; Remove Column\\n                        </button>\\n\\n                    </small>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</form>\"","module.exports = \"<div class=\\\"modal fade bd-example-modal-xl\\\" id=\\\"exampleModalScrollable\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n    aria-labelledby=\\\"exampleModalScrollableTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-scrollable modal-xl\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content bg-info\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title text-white\\\" id=\\\"exampleModalScrollableTitle\\\">{{pageTitleModal}}'s Script</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\" id=\\\"divConteudo\\\" style=\\\"text-align: center; background-color: #E9ECEF;\\\">\\n                <textarea type=\\\"text\\\" id=\\\"generatedScript\\\" [(ngModel)]=\\\"generatedScript\\\" class=\\\"scriptarea\\\" disabled\\n                    (ngModelChange)=\\\"cleanMessage();\\\"></textarea>\\n                <br>\\n                &nbsp;&nbsp;<span class=\\\"badge badge-success\\\">{{copyMessage}}</span>&nbsp;&nbsp;\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n\\n                <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n\\n                        </div>\\n                        <div class=\\\"col text-right popupControlBox\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"copyGeneratedScript()\\\" [disabled]=\\\"enableBtn\\\">\\n                                <img alt=\\\"Copy Script\\\" title=\\\"Copy Script\\\" src=\\\"./assets/btn/btnCopy.png\\\" />\\n                                Copy\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"dynamicDownloadTxt()\\\"  [disabled]=\\\"enableBtn\\\"\\n                                *ngIf=\\\"!isMobileDevice\\\">\\n                                <img alt=\\\"Download Script\\\" title=\\\"Download Script\\\"\\n                                    src=\\\"./assets/btn/btnDownload.png\\\" />\\n                                Download\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n\\n    <div class=\\\"card\\\" id=\\\"formHeader\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addColumn()\\\">\\n                            <img alt=\\\"Add Column\\\" title=\\\"Add Column\\\" src=\\\"./assets/btn/btnAdd.png\\\" />\\n                            &nbsp; Add Column\\n                        </button>\\n                    </div>\\n\\n                    <div class=\\\"col-sm\\\">\\n                        <div class=\\\"form-check text-right\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm\\\">\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\"\\n                                            formControlName=\\\"getcommit\\\" (change)=\\\"generateScript()\\\">\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Set Commit?</label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <br>\\n\\n    <div class=\\\"card alert-primary\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row mb-0\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <div class=\\\"input-group mb-1\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">View Name</span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ViewName\\\" aria-describedby=\\\"basic-addon1\\\"\\n                            formControlName=\\\"viewname\\\" (change)=\\\"generateScript()\\\" >\\n                    </div>\\n                    <small class=\\\"text-danger\\\" *ngIf=\\\"form.controls['viewname'].hasError('required')\\\">\\n                        View Name is required! </small> &nbsp;\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div class=\\\"input-group mb-1\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Vision Name</span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"VisionName\\\" aria-describedby=\\\"basic-addon1\\\"\\n                            formControlName=\\\"visionname\\\" (change)=\\\"generateScript()\\\">\\n                    </div>\\n                    <small class=\\\"text-danger\\\" *ngIf=\\\"form.controls['visionname'].hasError('required')\\\">\\n                        Vision Name is required! </small> &nbsp;\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row mb-0\\\">\\n                <div class=\\\"col-sm\\\">\\n                    <div class=\\\"input-group mb-1\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Module Name</span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ModuleName\\\" aria-describedby=\\\"basic-addon1\\\"\\n                            formControlName=\\\"modulename\\\" (change)=\\\"generateScript()\\\">\\n                    </div>\\n                    <small class=\\\"text-danger\\\" *ngIf=\\\"form.controls['modulename'].hasError('required')\\\">\\n                        Module Name is required! </small> &nbsp;\\n                </div>\\n                <div class=\\\"col-sm\\\">\\n                    <div class=\\\"input-group mb-1\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Note</span>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Note\\\" aria-describedby=\\\"basic-addon1\\\"\\n                            formControlName=\\\"note\\\" (change)=\\\"generateScript()\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row mb-0\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"input-group mb-0\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Set Default User?</span>\\n                            <div class=\\\"input-group-text\\\">\\n                                <input type=\\\"checkbox\\\" aria-label=\\\"Set Default User?\\\" formControlName=\\\"setdefaultuser\\\"\\n                                    (change)=\\\"generateScript()\\\">\\n                            </div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" aria-label=\\\"Username\\\"\\n                            formControlName=\\\"username\\\" (change)=\\\"generateScript()\\\">\\n                    </div>\\n                    <small class=\\\"text-danger\\\" *ngIf=\\\"form.controls['setdefaultuser'].value && form.controls['username'].hasError('required')\\\">\\n                            Username is required! </small> &nbsp;\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"input-group mb-0\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Set Default Profile?</span>\\n                            <div class=\\\"input-group-text\\\">\\n                                <input type=\\\"checkbox\\\" aria-label=\\\"Set Default Profile?\\\"\\n                                    formControlName=\\\"setdefaultprofile\\\" (change)=\\\"generateScript()\\\">\\n                            </div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Profile Name\\\" aria-label=\\\"Profile Name\\\"\\n                            formControlName=\\\"profilename\\\" (change)=\\\"generateScript()\\\">                            \\n                    </div>\\n                    <small class=\\\"text-danger\\\" *ngIf=\\\"form.controls['setdefaultprofile'].value && form.controls['profilename'].hasError('required')\\\">\\n                            Profile Name is required! </small> &nbsp;\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <br>\\n\\n    <div class=\\\"card bg-light\\\">\\n        <h5 class=\\\"card-header\\\">\\n            Columns\\n        </h5>\\n    </div>\\n\\n    <div formArrayName=\\\"column\\\">\\n        <div class=\\\"card\\\" *ngFor=\\\"let column of columnFormGroup.controls; let i = index;\\\" style=\\\"margin-bottom: 5px;\\\">\\n\\n            <div [formGroupName]=\\\"i\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Column Name</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ColumnName\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"columnname\\\"\\n                                    (change)=\\\"generateScript()\\\" placeholder=\\\"Table-column Name\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['columnname'].hasError('required')\\\">\\n                                Column Name is required! </small> &nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Column Format</label>\\n                                </div>\\n                                <select class=\\\"custom-select\\\" formControlName=\\\"format\\\" (change)=\\\"generateScript()\\\"\\n                                    id=\\\"inputGroupSelect01\\\">\\n                                    <option value=\\\"TX\\\">Text</option>\\n                                    <option value=\\\"dd/MM/yyyy\\\">dd/MM/yyyy</option>\\n                                    <option value=\\\"###\\\">###</option>\\n                                    <option value=\\\"###,###\\\">###,###</option>\\n                                    <option value=\\\"###,###,###.##\\\">###,###,###.##</option>\\n                                    <option value=\\\"dd/MM/yyyy HH:mm:ss\\\">dd/MM/yyyy HH:mm:ss</option>\\n                                    <option value=\\\"HH:mm:ss\\\">HH:mm:ss</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Portuguese</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Portuguese\\\"\\n                                    (change)=\\\"generateScript()\\\" aria-describedby=\\\"basic-addon1\\\"\\n                                    formControlName=\\\"portuguese\\\" placeholder=\\\"Column Name in portuguese\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['portuguese'].hasError('required')\\\">\\n                                Portuguese translate is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">English</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"English\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"english\\\" placeholder=\\\"Column Name in english\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['english'].hasError('required')\\\">\\n                                English translate is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Spanish</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Spanish\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"spanish\\\" placeholder=\\\"Column Name in spanish\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getColumnFormGroup(i).controls['spanish'].hasError('required')\\\">\\n                                Spanish translate is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Previous column</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"ColumnBefore\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"columnbefore\\\"\\n                                    (change)=\\\"generateScript()\\\" placeholder=\\\"Previous Table-column Name\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"card-footer text-right\\\">\\n                    <small class=\\\"text-muted\\\">\\n\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeColumn(i)\\\">\\n                            <img alt=\\\"Remove Column\\\" title=\\\"Remove Column\\\" src=\\\"./assets/btn/btnRemove.png\\\" />\\n                            &nbsp; Remove Column\\n                        </button>\\n\\n                    </small>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</form>\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n\\n    <div class=\\\"card\\\"  id=\\\"formHeader\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addPage()\\\">\\n                            <img alt=\\\"Add Parameter\\\" title=\\\"Add Parameter\\\" src=\\\"./assets/btn/btnAdd.png\\\" />\\n                            &nbsp; Add Page\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-sm\\\">\\n                        <div class=\\\"form-check text-right\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm\\\">\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\"\\n                                            formControlName=\\\"getcommit\\\" (change)=\\\"generateScript()\\\">\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Set Commit?</label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <br>\\n\\n\\n    <div formArrayName=\\\"page\\\">\\n        <div class=\\\"card\\\" *ngFor=\\\"let pageItem of pageFormGroup.controls; let i = index;\\\" style=\\\"margin-bottom: 5px;\\\">\\n\\n            <div [formGroupName]=\\\"i\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Name</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Name\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"name\\\" (change)=\\\"generateScript()\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getPageFormGroup(i).controls['name'].hasError('required')\\\">\\n                                Name is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Abbreviation</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Abbrev\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"abbrev\\\"\\n                                    (change)=\\\"generateScript()\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getPageFormGroup(i).controls['abbrev'].hasError('required')\\\">\\n                                Abbreviation is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">URL</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"URL\\\" aria-describedby=\\\"basic-addon1\\\"\\n                                    formControlName=\\\"url\\\" (change)=\\\"generateScript()\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\" *ngIf=\\\"getPageFormGroup(i).controls['url'].hasError('required')\\\">\\n                                URL is required! </small> &nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Icon</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Icon\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"icon\\\" (change)=\\\"generateScript()\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Page Type</label>\\n                                </div>\\n                                <select class=\\\"custom-select\\\" formControlName=\\\"pagetype\\\" (change)=\\\"generateScript()\\\"\\n                                    id=\\\"inputGroupSelect01\\\">\\n                                    <option value=\\\"T\\\">Screen</option>\\n                                    <option value=\\\"R\\\">Report</option>\\n                                    <option value=\\\"O\\\">Others</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect02\\\">Is Menu?</label>\\n                                </div>\\n                                <select class=\\\"custom-select\\\" formControlName=\\\"ismenu\\\" (change)=\\\"generateScript()\\\"\\n                                    id=\\\"inputGroupSelect02\\\">\\n                                    <option value=\\\"S\\\">Yes</option>\\n                                    <option value=\\\"N\\\">No</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Position</span>\\n                                </div>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" aria-label=\\\"OrderNum\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"ordernum\\\"\\n                                    (change)=\\\"generateScript()\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Namespace</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Namespace\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"namespace\\\"\\n                                    (change)=\\\"generateScript()\\\" placeholder=\\\"Path until this page\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getPageFormGroup(i).controls['namespace'].hasError('required')\\\">\\n                                Namespace is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Portuguese</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Portuguese\\\"\\n                                    (change)=\\\"generateScript()\\\" aria-describedby=\\\"basic-addon1\\\"\\n                                    formControlName=\\\"portuguese\\\" placeholder=\\\"Column Name in portuguese\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getPageFormGroup(i).controls['portuguese'].hasError('required')\\\">\\n                                Portuguese translate is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">English</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"English\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"english\\\" placeholder=\\\"Column Name in english\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getPageFormGroup(i).controls['english'].hasError('required')\\\">\\n                                English translate is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Spanish</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Spanish\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"spanish\\\" placeholder=\\\"Column Name in spanish\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getPageFormGroup(i).controls['spanish'].hasError('required')\\\">\\n                                Spanish translate is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\">\\n                                        <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\"\\n                                            formControlName=\\\"force\\\" (change)=\\\"generateScript()\\\">\\n                                    </div>\\n                                </div>\\n                                <label class=\\\"form-control\\\" aria-label=\\\"label with checkbox\\\" readonly>Force\\n                                    Update?</label>&nbsp;\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"card-footer text-right\\\">\\n                    <small class=\\\"text-muted\\\">\\n\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removePage(i)\\\">\\n                            <img alt=\\\"Remove Page\\\" title=\\\"Remove Page\\\" src=\\\"./assets/btn/btnRemove.png\\\" />\\n                            &nbsp; Remove Page\\n                        </button>\\n\\n                    </small>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n\\n</form>\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\r\\n\\r\\n    <div class=\\\"card\\\" id=\\\"formHeader\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addParameter()\\\">\\r\\n                            <img alt=\\\"Add Parameter\\\" title=\\\"Add Parameter\\\" src=\\\"./assets/btn/btnAdd.png\\\" />\\r\\n                            &nbsp; Add Parameter\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm\\\">\\r\\n                        <div class=\\\"form-check text-right\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm\\\">\\r\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\"\\r\\n                                            formControlName=\\\"getcommit\\\" (change)=\\\"generateScript()\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Set Commit?</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <br>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2\\\"\\r\\n                                            formControlName=\\\"getbeginend\\\" (change)=\\\"generateScript()\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck2\\\">Set\\r\\n                                            Begin/End?</label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n\\r\\n    <div formArrayName=\\\"parameter\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let parameterItem of parameterFormGroup.controls; let i = index;\\\"\\r\\n            style=\\\"margin-bottom: 5px;\\\">\\r\\n\\r\\n            <div [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row mb-1\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div class=\\\"input-group mb-1\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Parameter</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Parameter\\\"\\r\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"parameter\\\"\\r\\n                                    (change)=\\\"generateScript()\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getParameterFormGroup(i).controls['parameter'].hasError('required')\\\">\\r\\n                                Parameter is required! </small> &nbsp;\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\">\\r\\n                                        <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\"\\r\\n                                            formControlName=\\\"globalparameter\\\" (change)=\\\"generateScript()\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <label class=\\\"form-control\\\" aria-label=\\\"label with checkbox\\\" readonly>Global\\r\\n                                    Parameter?</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\">\\r\\n                                        <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\"\\r\\n                                            formControlName=\\\"isreviewed\\\" (change)=\\\"generateScript()\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <label class=\\\"form-control\\\" aria-label=\\\"label with checkbox\\\" readonly>Reviewed\\r\\n                                    Parameter?</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row mb-1\\\">\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Value</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Value\\\" (change)=\\\"generateScript()\\\"\\r\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"value\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getParameterFormGroup(i).controls['value'].hasError('required')\\\">\\r\\n                                Parameter Value is required! </small>&nbsp;\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Note</span>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Note\\\"\\r\\n                                    (change)=\\\"generateScript()\\\" aria-describedby=\\\"basic-addon1\\\"\\r\\n                                    formControlName=\\\"observation\\\">\\r\\n                            </div>\\r\\n                            <small class=\\\"text-danger\\\"\\r\\n                                *ngIf=\\\"getParameterFormGroup(i).controls['observation'].hasError('required')\\\">\\r\\n                                Parameter Note is required! </small>&nbsp;\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"card-footer text-right\\\">\\r\\n                    <small class=\\\"text-muted\\\">\\r\\n\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeParameter(i)\\\">\\r\\n                            <img alt=\\\"Remove Parameter\\\" title=\\\"Remove Parameter\\\" src=\\\"./assets/btn/btnRemove.png\\\" />\\r\\n                            &nbsp; Remove Parameter\\r\\n                        </button>\\r\\n\\r\\n                    </small>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</form>\"","module.exports = \"<form [formGroup]=\\\"form\\\">\\n\\n    <div class=\\\"card\\\"  id=\\\"formHeader\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addTranslatorKey()\\\">\\n                            <img alt=\\\"Add Key\\\" title=\\\"Add Key\\\" src=\\\"./assets/btn/btnAdd.png\\\" />\\n                            &nbsp; Add Key\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-sm\\\">\\n                        <div class=\\\"form-check text-right\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm\\\">\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck1\\\" formControlName=\\\"getcommit\\\" (change)=\\\"generateScript()\\\">\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck1\\\">Set Commit?</label>\\n                                    </div>\\n                                </div>\\n                                <br>\\n                                <div class=\\\"col\\\">\\n                                    <div class=\\\"custom-control custom-checkbox\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck2\\\" formControlName=\\\"getbeginend\\\" (change)=\\\"generateScript()\\\">\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customCheck2\\\">Set Begin/End?</label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <br>\\n\\n    <div formArrayName=\\\"translateKeys\\\">\\n        <div class=\\\"card\\\" *ngFor=\\\"let translate of translateFormGroup.controls; let i = index;\\\"\\n            style=\\\"margin-bottom: 5px;\\\">\\n\\n            <div [formGroupName]=\\\"i\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm-8\\\">\\n                            <div class=\\\"input-group mb-1\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Key</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Key\\\" aria-describedby=\\\"basic-addon1\\\"\\n                                    formControlName=\\\"key\\\" (change)=\\\"generateScript()\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getTranslateFormGroup(i).controls['key'].hasError('required')\\\">\\n                                Key is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\">\\n                                        <input type=\\\"checkbox\\\" aria-label=\\\"Checkbox for following text input\\\"\\n                                            formControlName=\\\"force\\\" (change)=\\\"generateScript()\\\">\\n                                    </div>\\n                                </div>\\n                                <label class=\\\"form-control\\\" aria-label=\\\"label with checkbox\\\" readonly>Force\\n                                    Update?</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row mb-1\\\">\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Portuguese</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Portuguese\\\"\\n                                    (change)=\\\"generateScript()\\\" aria-describedby=\\\"basic-addon1\\\"\\n                                    formControlName=\\\"portuguese\\\" placeholder=\\\"Key Value in portuguese\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getTranslateFormGroup(i).controls['portuguese'].hasError('required')\\\">\\n                                Portuguese translate is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">English</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"English\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"english\\\" placeholder=\\\"Key Value in english\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getTranslateFormGroup(i).controls['english'].hasError('required')\\\">\\n                                English translate is required! </small>&nbsp;\\n                        </div>\\n                        <div class=\\\"col-sm\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">Spanish</span>\\n                                </div>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Spanish\\\" (change)=\\\"generateScript()\\\"\\n                                    aria-describedby=\\\"basic-addon1\\\" formControlName=\\\"spanish\\\" placeholder=\\\"Key Value in spanish\\\">\\n                            </div>\\n                            <small class=\\\"text-danger\\\"\\n                                *ngIf=\\\"getTranslateFormGroup(i).controls['spanish'].hasError('required')\\\">\\n                                Spanish translate is required! </small>&nbsp;\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"card-footer text-right\\\">\\n                    <small class=\\\"text-muted\\\">\\n\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeTranslateKey(i)\\\">\\n                            <img alt=\\\"Remove Key\\\" title=\\\"Remove Key\\\" src=\\\"./assets/btn/btnRemove.png\\\" />\\n                            &nbsp; Remove Key\\n                        </button>\\n\\n                    </small>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</form>\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ConstantComponent } from './constant/constant.component';\nimport { ParameterComponent } from './parameter/parameter.component';\nimport { TranslatorComponent } from './translator/translator.component';\nimport { PageComponent  } from './page/page.component';\nimport { EditcubeComponent } from './editcube/editcube.component';\nimport { NewcubeComponent } from './newcube/newcube.component';\n\nconst routes: Routes = [\n  { path:'', redirectTo: '/dashboard', pathMatch:'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'constant', component: ConstantComponent },\n  { path: 'parameter', component: ParameterComponent },\n  { path: 'translator', component: TranslatorComponent },\n  { path: 'page', component: PageComponent },\n  { path: 'editcube', component: EditcubeComponent },\n  { path: 'newcube', component: NewcubeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \".sectionPages{\\r\\n    padding-top: 15px;\\r\\n    padding-bottom: 50px;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    z-index: 999999999999;\\r\\n}\\r\\n\\r\\n.sectionPages article{\\r\\n    align-items: center;\\r\\n    align-self: center;\\r\\n    align-content: center;    \\r\\n}\\r\\n\\r\\nnav{\\r\\n    /* background-color: rgba(233, 236, 239, 0.767);  */\\r\\n    align-self: center;\\r\\n    align-content: center;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\nnav span{\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLFdBQVc7SUFDWCxZQUFZO0lBQ1oscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxtREFBbUQ7SUFDbkQsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VjdGlvblBhZ2Vze1xyXG4gICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgei1pbmRleDogOTk5OTk5OTk5OTk5O1xyXG59XHJcblxyXG4uc2VjdGlvblBhZ2VzIGFydGljbGV7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyOyAgICBcclxufVxyXG5cclxubmF2e1xyXG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzMsIDIzNiwgMjM5LCAwLjc2Nyk7ICAqL1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGhlaWdodDogMzBweDtcclxufVxyXG5cclxubmF2IHNwYW57XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbiAgIl19 */\"","import { Component, ChangeDetectorRef, OnInit  } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n    \r\n  showCard: boolean = false;\r\n  showPageName: boolean = true;\r\n  isMobileDevice: boolean = false;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  title = 'Script Generator';\r\n  pageBtn = \"botões git/download\";\r\n  pageTitle = 'Dashboard';\r\n\r\n  ngOnInit() {\r\n    this.checkDevice();\r\n  }\r\n\r\n  cdrMethod(): void {\r\n    this.checkDevice();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  goBack(): void {\r\n    this.checkDevice();\r\n    this.location.back();\r\n  }    \r\n\r\n  checkDevice(): void{\r\n    var ua = navigator.userAgent;\r\n\r\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(ua))\r\n       this.isMobileDevice = true;\r\n    else\r\n      this.isMobileDevice = false;\r\n  }\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ConstantComponent } from './constant/constant.component';\nimport { ParameterComponent } from './parameter/parameter.component';\nimport { FormsModule } from '@angular/forms';\nimport { ModalscriptComponent } from './modalscript/modalscript.component';\nimport { TranslatorComponent } from './translator/translator.component';\nimport { PageComponent } from './page/page.component';\nimport { EditcubeComponent } from './editcube/editcube.component';\nimport { NewcubeComponent } from './newcube/newcube.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ConstantComponent,\n    ParameterComponent,\n    ModalscriptComponent,\n    TranslatorComponent,\n    PageComponent,\n    EditcubeComponent,\n    NewcubeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [ModalscriptComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnN0YW50L2NvbnN0YW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { GeneratorService } from '../generator.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ConstantService } from './constant.service';\nimport { Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n\n@Component({\n  selector: 'app-constante',\n  templateUrl: './constant.component.html',\n  styleUrls: ['./constant.component.css']\n})\nexport class ConstantComponent implements OnInit {\n  public form: FormGroup;\n  public constantList: FormArray;  \n  \n  constructor(\n    private appcomponent: AppComponent,\n    private generatorservice: GeneratorService,\n    private constantservice: ConstantService,\n    private fb: FormBuilder,\n    private renderer2: Renderer2,\n    @Inject(DOCUMENT) private _document\n  ) { }  \n\n  generatorList = this.generatorservice.getGenerator(\"/constant\");\n  getCommit: boolean = true;\n  getBeginEnd: boolean = true;\n\n  ngOnInit() {\n    this.appcomponent.pageTitle = this.generatorList.name;\n    this.appcomponent.showCard = true;\n    this.constantservice.cleanScript();\n\n    this.form = this.fb.group({\n      getcommit: [true],\n      getbeginend: [true],\n      constant: this.fb.array([this.createConstantKey()])\n    });\n\n    this.constantList = this.form.get('constant') as FormArray;\n\n    const s = this.renderer2.createElement('script');\n    s.type = 'text/javascript';\n    s.src = './assets/script/scripts.js';\n    this.renderer2.appendChild(this._document.body, s);\n\n    this.appcomponent.cdrMethod();\n  }\n\n\n  //#########################################################################################\n\n  createConstantKey(): FormGroup{\n    return this.fb.group({\n      subquery: [null, Validators.compose([Validators.required])],\n      constant: [null, Validators.compose([Validators.required])],\n      table: [null, Validators.compose([Validators.required])],\n      column: [null, Validators.compose([Validators.required])],\n      value: [null, Validators.compose([Validators.required])],\n      observation: [null, Validators.compose([Validators.required])],\n      isreviewed: [true]\n    });\n  }\n\n  addConstant() {\n    this.constantList.push(this.createConstantKey());\n    this.generateScript();\n  }\n\n  removeConstant(index) {\n    if (confirm(\"Are you sure to delete this \" + this.generatorList.name + \"?\")) {\n      this.constantList.removeAt(index);\n      this.generateScript();\n    }\n  }\n\n  getConstantFormGroup(index): FormGroup {\n    const formGroup = this.constantList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  get constantFormGroup() {\n    return this.form.get('constant') as FormArray;\n  }\n\n    //#########################################################################################\n\n    generateScript() {\n      this.constantservice.generateScript(this.form, this.constantList);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ScriptInterface } from '../ScriptInterface';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { ScriptService } from '../script.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantService implements ScriptInterface {\n\n  constructor(\n    private scriptservice: ScriptService\n  ) { }\n\n  generateScript(form: FormGroup, constantList: FormArray) {\n    var declareSession = \"\";\n    var querySelect = \"\\t /*Get Constant Value*/\\n\";\n    var queryProcedure = \"\\t /*Insert Constant*/\\n\";\n    var queryUpdate = \"\\t /*Review the constant*/\\n\";\n    var query = \"\";\n    var isReviewed = 'P'\n    var isCreated = \"N\";\n    var contConst = 1;\n    var varValue = '';\n\n    var strAux = \"\";\n\n    for (let item of constantList.controls) {\n\n      if (item.value[\"constant\"] != null &&\n        item.value[\"table\"] != null &&\n        item.value[\"column\"] != null &&\n        (item.value[\"subquery\"] != null || item.value[\"value\"] != null) &&\n        item.value[\"observation\"] != null) {\n\n        /*########################*/\n        if (item.value[\"subquery\"] != null) {\n\n          strAux = item.value[\"subquery\"];\n\n          if ((strAux.includes(\"from\") || strAux.includes(\"FROM\")) && (strAux.includes(\"select\") || strAux.includes(\"SELECT\"))) {\n\n            strAux = strAux.replace(\"\\t\", \"\").replace(\"FROM\", \"from\"); /*IT CAN'T BE UPPERCASE*/\n\n            querySelect += strAux.replace(\"from\", \"into V_CODIGO_\" + contConst + \"\\nfrom\");\n\n            if (querySelect.substring(querySelect.length - 1, querySelect.length) != \";\") { querySelect += \";\"; }\n\n            querySelect += \"\\n\\n\";\n\n            declareSession += \"V_CODIGO_\" + contConst + \",\";\n            varValue = \"V_CODIGO_\" + contConst;\n          }\n          else {\n            this.scriptservice.setScript(\"<< The QUERY has no SELECT/FROM statement. This script will not be generated! >> \\n\\n\");\n            return;\n          }\n        }\n        else {\n          varValue = \"'\" + item.value[\"value\"] + \"'\";\n        }\n\n\n        /*########################*/\n        queryProcedure += \"\\t PR_INSERE_SIS_CONSTANTE(\";\n        queryProcedure += \" P_DCR_CONSTANTE    => '\" + item.value[\"constant\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_NOM_TABELA       => '\" + item.value[\"table\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_NOM_COLUNA       => '\" + item.value[\"column\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_CD_REGISTRO_EGF  => \" + varValue + \", \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t DCR_OBSERVACAO     => '\" + item.value[\"observation\"] + \"');\";\n        queryProcedure += \"\\n\\n\";\n\n\n        /*########################*/\n        if (item.value[\"isreviewed\"]) { isReviewed = \"R\"; }\n        else { isReviewed = \"P\"; }\n\n        queryUpdate += \"\\t UPDATE SIS_CONSTANTE SET TIP_REG = '\" + isReviewed + \"' WHERE DCR_CONSTANTE = '\" + item.value[\"constant\"] + \"';\";\n        queryUpdate += \"\\n\";\n\n\n        /*########################*/\n\n        contConst++;\n        isCreated = \"S\";\n      }\n      else {\n        isCreated = \"N\";\n      }\n\n    }\n\n    if (declareSession != '') { query += \"Declare\\n\\n\" + declareSession.slice(0, -1) + \" number; \" + \"\\n\\n\"; }\n\n    query += \"Begin\\n\\n\" + querySelect + \"\\n\" + queryProcedure + \"\\n\" + queryUpdate + \"\\n\";\n\n    if (form.value[\"getcommit\"]) { query += \"\\t Commit;\\n\\n\"; }\n\n    query += \"End;\";\n\n    if (isCreated == \"S\") { this.scriptservice.setScript(query); }\n    else { this.cleanScript(); }\n  }\n\n  cleanScript() {\n    this.scriptservice.cleanScript();\n  }\n\n}\n","module.exports = \".articleDashboard{\\r\\n    text-align: center;\\r\\n    padding: 30px 0px 50px 0px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.articleDashboard .card-deck {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\r\\n    grid-gap: .5rem;\\r\\n}\\r\\n\\r\\n.articleDashboard strong{\\r\\n    letter-spacing: 5px; \\r\\n}\\r\\n\\r\\n.articleDashboard .linkPag{\\r\\n    cursor: pointer;\\r\\n    border: 3px transparent solid;\\r\\n}\\r\\n\\r\\n.articleDashboard .linkPag .footerCard{\\r\\n    float: right;    \\r\\n    height: 30px;\\r\\n}\\r\\n\\r\\n.articleDashboard .linkPag:hover{\\r\\n    border: 3px black solid;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsMkRBQTJEO0lBQzNELGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXJ0aWNsZURhc2hib2FyZHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDMwcHggMHB4IDUwcHggMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5hcnRpY2xlRGFzaGJvYXJkIC5jYXJkLWRlY2sge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMzAwcHgsIDFmcikpO1xyXG4gICAgZ3JpZC1nYXA6IC41cmVtO1xyXG59XHJcblxyXG4uYXJ0aWNsZURhc2hib2FyZCBzdHJvbmd7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogNXB4OyBcclxufVxyXG5cclxuLmFydGljbGVEYXNoYm9hcmQgLmxpbmtQYWd7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBib3JkZXI6IDNweCB0cmFuc3BhcmVudCBzb2xpZDtcclxufVxyXG5cclxuLmFydGljbGVEYXNoYm9hcmQgLmxpbmtQYWcgLmZvb3RlckNhcmR7XHJcbiAgICBmbG9hdDogcmlnaHQ7ICAgIFxyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG59XHJcblxyXG4uYXJ0aWNsZURhc2hib2FyZCAubGlua1BhZzpob3ZlcntcclxuICAgIGJvcmRlcjogM3B4IGJsYWNrIHNvbGlkO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { Generator } from '../generator';\nimport { GeneratorService } from '../generator.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private appcomponent: AppComponent,\n              private generatorservice: GeneratorService\n              ) \n  { }\n\n  generatorList: Generator[];\n\n  ngOnInit() {\n    this.getGeneratorList();\n    this.appcomponent.pageTitle = \"Dashboard\";\n    this.appcomponent.showCard = false;\n    this.appcomponent.cdrMethod();\n  }\n\n  getGeneratorList(): void {\n    this.generatorservice.getGenerators()\n    .subscribe(generator => this.generatorList = generator);\n  }\n\n  getStatus(version:string): string{\n    var retorno;\n\n    if(version.match('v1.0')) {\n      retorno = 'new';\n    } else {\n      retorno = 'update';\n    }\n\n    return retorno;\n  }\n\n  showVersion(modify: Date): boolean{\n    var returnValue = true;\n\n    var oneDay = 24*60*60*1000;\n    var c = Math.round(Math.abs((modify.getTime() - new Date().getTime())/(oneDay)));\n\n    if(c > 15)\n    {returnValue = false;}\n\n    return returnValue;\n  }\n}\n","import { Generator } from '../generator';\r\nimport { Technology } from '../generator';\r\n\r\nconst pathImg = \"./assets/img/\";\r\nconst pathLogo = \"./assets/logo/\";\r\nvar countId = 0;\r\n\r\nexport const GENERATORS: Generator[] = [\r\n  // { id: ++countId, name: 'Dashboard', link: '/dashboard', img: pathImg + 'imgDashboard.png' },\r\n  { id: ++countId, name: 'Parameter', link: '/parameter', img: pathImg + 'imgParameter.png' },\r\n  { id: ++countId, name: 'Constant', link: '/constant', img: pathImg + 'imgConstant.png' },\r\n  { id: ++countId, name: 'Translator Key', link: '/translator', img: pathImg + 'imgTranslator.png' },\r\n  { id: ++countId, name: 'Page', link: '/page', img: pathImg + 'imgPage.png' },\r\n  { id: ++countId, name: 'Create Cube', link: '/newcube', img: pathImg + 'imgCubeNew.png' },\r\n  { id: ++countId, name: 'Edit Cube', link: '/editcube', img: pathImg + 'imgCubeEdit.png' }\r\n];\r\n\r\nexport const TECHNOLOGIES: Technology [] = [\r\n  { id: ++countId, name: 'HTML5', img: pathLogo + 'html5.png' },\r\n  { id: ++countId, name: 'CSS', img: pathLogo + 'css.png' },\r\n  { id: ++countId, name: 'GitHub', img: pathLogo + 'github.png' },\r\n  { id: ++countId, name: 'Bootstrap', img: pathLogo + 'bootstrap.png' },\r\n  { id: ++countId, name: 'Angular', img: pathLogo + 'angular.png' },\r\n] ;","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRjdWJlL2VkaXRjdWJlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { GeneratorService } from '../generator.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { EditcubeService } from './editcube.service';\nimport { Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n\n@Component({\n  selector: 'app-editcube',\n  templateUrl: './editcube.component.html',\n  styleUrls: ['./editcube.component.css']\n})\nexport class EditcubeComponent implements OnInit {\n  public form: FormGroup;\n  public columnList: FormArray;\n\n  constructor(\n    private appcomponent: AppComponent,\n    private generatorservice: GeneratorService,\n    private editcubeService: EditcubeService,\n    private fb: FormBuilder,\n    private renderer2: Renderer2,\n    @Inject(DOCUMENT) private _document\n  ) { }\n\n  generatorList = this.generatorservice.getGenerator(\"/editcube\");\n  getCommit: boolean = true;\n\n  ngOnInit() {\n    this.appcomponent.pageTitle = this.generatorList.name;\n    this.appcomponent.showCard = true;\n    this.editcubeService.cleanScript();\n\n    this.form = this.fb.group({\n      getcommit: [true],\n      viewname: [null, Validators.compose([Validators.required])],\n      column: this.fb.array([this.createColumnKey()])\n    });\n\n    this.columnList = this.form.get('column') as FormArray;\n\n    const s = this.renderer2.createElement('script');\n    s.type = 'text/javascript';\n    s.src = './assets/script/scripts.js';\n    this.renderer2.appendChild(this._document.body, s);\n\n    this.appcomponent.cdrMethod();\n  }\n\n  //#########################################################################################\n\n  createColumnKey(): FormGroup {\n    return this.fb.group({\n      columnname: [null, Validators.compose([Validators.required])],\n      format: ['TX'],\n      portuguese: [null, Validators.compose([Validators.required])],\n      english: [null, Validators.compose([Validators.required])],\n      spanish: [null, Validators.compose([Validators.required])],\n      columnbefore: [null]\n    });\n  }\n\n  addColumn() {\n    this.columnList.push(this.createColumnKey());\n    this.generateScript();\n  }\n\n  removeColumn(index) {\n    if (confirm(\"Are you sure to delete this column?\")) {\n      this.columnList.removeAt(index);\n      this.generateScript();\n    }\n  }\n\n  getColumnFormGroup(index): FormGroup {\n    const formGroup = this.columnList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  get columnFormGroup() {\n    return this.form.get('column') as FormArray;\n  }\n\n  //#########################################################################################\n\n  generateScript() {\n    this.editcubeService.generateScript(this.form, this.columnList);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ScriptInterface } from '../ScriptInterface';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { ScriptService } from '../script.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditcubeService implements ScriptInterface {\n  constructor(\n    private scriptservice: ScriptService\n  ) { }\n\n  generateScript(form: FormGroup, columnList: FormArray) {\n    var query = \"\";\n    var isCreated = \"N\";\n    var queryProcedure = \"\";\n    var queryDeclare = \"\";\n    var listColumnName = \"\";\n    var listColumnFormat = \"\";\n    var listColumnPort = \"\";\n    var listColumnEngl = \"\";\n    var listColumnSpan = \"\";\n    var listColumnPrevious = \"\";\n\n\n    queryDeclare += \"DECLARE \\n\\n\";\n    queryDeclare += \"/*O index do varray é a quantidade de colunas a serem criados*/ \\n\";\n    queryDeclare += \"\\t type t_Coluna is varray(\"+ columnList.controls.length +\") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\t type t_Anterior is varray(\"+ columnList.controls.length +\") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\t type t_Traducao is varray(\"+ columnList.controls.length +\") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\t type t_Formato is varray(\"+ columnList.controls.length +\") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Declaração da variável de formato da coluna*/\\n\";\n    queryDeclare += \"\\t v_FormatoColunaCubo NVARCHAR2(50) := '';\\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Linguas cadastradas no sistema*/\\n\";\n    queryDeclare += \"\\t Cursor c_Language is (\\n\";\n    queryDeclare += \"\\t\\t Select CD_LANGUAGE\\n\";\n    queryDeclare += \"\\t\\t from INT_LANGUAGE\\n\";\n    queryDeclare += \"\\t );\\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Nome da tabela da visão (cubo/view)*/  \\n\";\n    queryDeclare += \"\\t v_NomeViewCubo nvarchar2(30) := '\"+form.value[\"viewname\"]+\"';\\n\";\n\n    for (let item of columnList.controls) {\n\n      if (form.value[\"viewname\"] != null &&\n        item.value[\"columnname\"] != null &&\n        item.value[\"format\"] != null &&\n        item.value[\"portuguese\"] != null &&\n        item.value[\"spanish\"] != null &&\n        item.value[\"english\"] != null) {\n       \n          listColumnName += \"'\" + item.value[\"columnname\"] + \"',\";\n          listColumnFormat += \"'\" + item.value[\"format\"] + \"',\";\n          listColumnPort += \"'\" + item.value[\"portuguese\"] + \"',\";\n          listColumnEngl += \"'\" + item.value[\"spanish\"] + \"',\";\n          listColumnSpan += \"'\" + item.value[\"english\"] + \"',\";\n          listColumnPrevious += \"'\" + (item.value[\"columnbefore\"] == null ? \"\" : item.value[\"columnbefore\"]) + \"',\";\n\n        isCreated = \"S\";\n      }\n      else\n      {\n        isCreated = \"N\";\n      }\n\n    }\n\n    queryDeclare += \"/*Nome(s) do(s) campo(s) novo(s)*/\\n\";\n    queryDeclare += \"\\t var_NovaColuna t_Coluna := t_Coluna(\"+listColumnName.slice(0, -1)+\");\\n\";\n    queryDeclare += \"/*Nome(s) da(s) colunas(s) onde a(s) nova(s) coluna(s) será(ão) adiciona(s) posteriormente*/\\n\";\n    queryDeclare += \"/*Deixar em branco caso queira adicionar ao fim do cubo*/\\n\";\n    queryDeclare += \"\\t var_ColunaAnterior t_Anterior := t_Anterior(\"+listColumnPrevious.slice(0, -1)+\");\\n\";\n    queryDeclare += \"/*Formato(s) do(s) campo(s) novo(s)*/\\n\";\n    queryDeclare += \"\\t var_NovoFormato t_Formato := t_Formato(\"+listColumnFormat.slice(0, -1)+\")\\n\";\n    queryDeclare += \"/*Tradução(ões) do(s) campo(s) novo(s)*/\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoPt t_Traducao := t_Traducao(\"+listColumnPort.slice(0, -1)+\")\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoEs t_Traducao := t_Traducao(\"+listColumnSpan.slice(0, -1)+\")\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoEn t_Traducao := t_Traducao(\"+listColumnEngl.slice(0, -1)+\")\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoZh t_Traducao := t_Traducao(\"+listColumnEngl.slice(0, -1)+\")\\n\";\n    queryDeclare += \"/*### SE PRECISAR ADICIONAR OUTRO IDIOMA QUE NÃO ESTEJA AQUI, DEVE SER CRIADO UM NOVO CURSOR E ADICIONAR ELE NO LOOP NO FINAL DO SCRIPT ###*/ \\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Variável para controle da visão*/\\n\";\n    queryDeclare += \"\\t v_ExisteVisao number := 0;\\n\";\n    queryDeclare += \"\\n\\n\";\n\n    queryProcedure += \"BEGIN\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*0- Verifico se existe a Visão cadastrada*/\\n\";\n    queryProcedure += \"\\t select \tcount(1)\\n\";\n    queryProcedure += \"\\t into \tv_ExisteVisao\\n\";\n    queryProcedure += \"\\t from \tcon_visao\\n\";\n    queryProcedure += \"\\t where \tupper(trim(dcr_nome_fisico)) = upper(trim(v_NomeViewCubo));\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t if (v_ExisteVisao = 0) then\\n\";\n    queryProcedure += \"\\t\\t raise_application_error(-20001,'View ' || v_NomeViewCubo || ' não possui visão cadastrada!!');\\n\";\n    queryProcedure += \"\\t\\t return;\\n\";\n    queryProcedure += \"\\t end if;\\n\";\n    queryProcedure += \"/*0- Verifico se existe a Visão cadastrada*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*1- Atualiza estrutura do cubo*/\\n\";\n    queryProcedure += \"\\t PR_ATUALIZA_ESTRUTURA_CUBO(v_NomeViewCubo); \\n\";\n    queryProcedure += \"/*1- Atualiza estrutura do cubo*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*2- Loop pelos campos novos do cubo*/\\n\";\n    queryProcedure += \"\\t for i in 1..var_NovaColuna.count loop    \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Limpo a coluna de formato para o novo loop*/\\n\";\n    queryProcedure += \"\\t\\t v_FormatoColunaCubo := '';\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*3- Seleciona qual o formato da coluna*/    \\n\";\n    queryProcedure += \"\\t\\t select \\n\";\n    queryProcedure += \"\\t\\t\\t case UPPER(TO_CHAR(var_NovoFormato(i)))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'DA' then 'dd/MM/yyyy' /*Apenas Data*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'NU' then '###' /*Número simples*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'DE' then '###,###' /*Número com casas decimais*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'MO' then '###,###,###.##' /*monetário*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'DH' then 'dd/MM/yyyy HH:mm:ss' /*Data e Hora*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'HO' then 'HH:mm:ss' /*Apenas Hora*/   \\n\";\n    queryProcedure += \"\\t\\t\\t\\t WHEN 'TX' THEN NULL /*Texto padrão*/\\n\";\n    queryProcedure += \"\\t\\t\\t else\\n\";\n    queryProcedure += \"\\t\\t\\t\\t null /*Texto padrão*/\\n\";\n    queryProcedure += \"\\t\\t\\t end \\n\";\n    queryProcedure += \"\\t\\t into v_FormatoColunaCubo\\n\";\n    queryProcedure += \"\\t\\t from dual;    \\n\";\n    queryProcedure += \"/*3- Seleciona qual o formato da coluna*/    \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*4- define o formato da coluna*/\\n\";\n    queryProcedure += \"\\t\\t UPDATE CON_COLUNA_VISAO \\n\";\n    queryProcedure += \"\\t\\t SET DCR_FORMATO = v_FormatoColunaCubo \\n\";\n    queryProcedure += \"\\t\\t WHERE UPPER(DCR_CHAVE_TRADUCAO) = (v_NomeViewCubo || '.' || var_NovaColuna(i));        \\n\";\n    queryProcedure += \"/*4- define o formato da coluna*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*5- Passa a coluna para visivel*/\\n\";\n    queryProcedure += \"\\t\\t UPDATE ADM_CAMPO_RELATORIO CR\\n\";\n    queryProcedure += \"\\t\\t SET FLAG_VISIVEL = 'S'\\n\";\n    queryProcedure += \"\\t\\t WHERE EXISTS (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t SELECT \t1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t INNER JOIN \tCON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t INNER JOIN \tCON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND UPPER(CV.DCR_CHAVE_TRADUCAO) \t= (v_NomeViewCubo || '.' || var_NovaColuna(i))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeViewCubo\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND CR.CD_RELATORIO \t\t\t\t= R.CD_RELATORIO \\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND CR.CD_COLUNA_VISAO \t\t\t\t= CV.CD_COLUNA_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t );\\n\";\n    queryProcedure += \"/*5- Passa a coluna para visivel*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*6- cadastrando a sequencia da nova coluna*/\\n\";\n    queryProcedure += \"\\t\\t UPDATE  ADM_CAMPO_RELATORIO\\n\";\n    queryProcedure += \"\\t\\t SET \tNUM_SEQUENCIA =\tdecode(var_ColunaAnterior(i), '',\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  SELECT \tmax(CR.NUM_SEQUENCIA) +\\n\"; 1\n    queryProcedure += \"\\t\\t\\t\\t\\t  FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tADM_CAMPO_RELATORIO  CR ON (CR.CD_RELATORIO = R.CD_RELATORIO AND CR.CD_COLUNA_VISAO = CV.CD_COLUNA_VISAO)\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeViewCubo\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t ),\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  SELECT \tCR.NUM_SEQUENCIA + 1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tADM_CAMPO_RELATORIO  CR ON (CR.CD_RELATORIO = R.CD_RELATORIO AND CR.CD_COLUNA_VISAO = CV.CD_COLUNA_VISAO)\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  AND UPPER(CV.DCR_CHAVE_TRADUCAO) \t= (v_NomeViewCubo || '.' || var_ColunaAnterior(i))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeViewCubo\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t )\\n\";\n    queryProcedure += \"\\t\\t\\t\\t )\\n\";\n    queryProcedure += \"\\t\\t WHERE \tCD_COLUNA_VISAO = (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t SELECT \tCV.CD_COLUNA_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t INNER JOIN CON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t INNER JOIN CON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t AND UPPER(CV.DCR_CHAVE_TRADUCAO) \t= (v_NomeViewCubo || '.' || var_NovaColuna(i))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeViewCubo\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t GROUP BY CV.CD_COLUNA_VISAO\\n\";\n    queryProcedure += \"                 );        \\n\";\n    queryProcedure += \"/*6- cadastrando a sequencia da nova coluna*/        \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*7- Loop para cadastrar as traduções*/\\n\";\n    queryProcedure += \"\\t\\t for f_Language in c_Language loop\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em português*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'PT' then            \\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeViewCubo || '.' || var_NovaColuna(i)), var_NovaTraducaoPt(i), 'S');        \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em espanhol*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'ES' then\\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeViewCubo || '.' || var_NovaColuna(i)), var_NovaTraducaoEs(i), 'S');  \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em inglês*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'EN' then\\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeViewCubo || '.' || var_NovaColuna(i)), var_NovaTraducaoEn(i), 'S');   \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em chinês(ou inglês)*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'ZH' then\\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeViewCubo || '.' || var_NovaColuna(i)), var_NovaTraducaoZh(i), 'S'); \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t end loop;\\n\";\n    queryProcedure += \"/*7- Loop para cadastrar as traduções*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t end loop;\\n\";\n    queryProcedure += \"/*2- Loop pelos campos novos do cubo*/\\n\";\n    queryProcedure += \"\\n\"\n\n    query += queryDeclare + queryProcedure;\n\n    if (form.value[\"getcommit\"]) { query += \"/*Salva as mudanças*/\\n\\t Commit;\\n\\n\"; }\n\n    query += \"End;\";\n\n    if (isCreated == \"S\") \n      { this.scriptservice.setScript(query); }\n    else\n      { this.cleanScript(); }\n  }\n\n  cleanScript() {\n    this.scriptservice.cleanScript();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportService {\n\n  constructor() { }\n\n  private generatedScript: string;\n\n  cleanMessage(): string {\n    return '';\n  }\n\n  setMessageCopyClipBoard(): string {\n    return 'Script has been copied to Clipboard';\n  }\n\n  setMessageDownload(): string {\n    return 'Script has been download to your computer';\n  }\n\n  copyGeneratedScript(value: string) {\n\n    this.generatedScript = value;\n    \n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = this.generatedScript;\n\n    var divAtual = document.getElementById(\"divConteudo\");\n    var divText = document.getElementById(\"generatedScript\");\n\n    divAtual.insertBefore(selBox, divText);\n\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n\n  }\n\n  generateFileName(): string {\n\n    var objToday  = new Date();\n    var dd = String(objToday.getDate()).padStart(2, '0');\n    var mm = String(objToday.getMonth() + 1).padStart(2, '0'); \n    var yyyy = objToday.getFullYear();\n    var hour = String(objToday.getHours() + 1).padStart(2, '0');\n    var minute = String(objToday.getMinutes() + 1).padStart(2, '0');\n    var second = String(objToday.getSeconds() + 1).padStart(2, '0');\n    \n    var today = yyyy + mm + dd + hour + minute + second;\n\n    return today;\n  }\n\n\n  fakeValidateUserData(value: string) {\n    return of(value);\n  }\n\n  private setting = {\n    element: {\n      dynamicDownload: null as HTMLElement\n    }\n  }\n\n  dynamicDownloadTxt(value: string) {\n    this.fakeValidateUserData(value).subscribe((res) => {\n      this.dyanmicDownloadByHtmlTag({\n        fileName: 'delta-' + this.generateFileName() + '.sql',\n        text: res \n      });\n    });\n\n  }\n\n  private dyanmicDownloadByHtmlTag(arg: {\n    fileName: string,\n    text: string\n  }) {\n    if (!this.setting.element.dynamicDownload) {\n      this.setting.element.dynamicDownload = document.createElement('a');\n    }\n    const element = this.setting.element.dynamicDownload;\n    const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\n    element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\n    element.setAttribute('download', arg.fileName);\n\n    var event = new MouseEvent(\"click\");\n    element.dispatchEvent(event);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GENERATORS } from './dashboard/mock-generators';\nimport { Generator } from './generator';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneratorService {\n\n  constructor() { }\n\n  getGenerators(): Observable<Generator[]>{\n    return of(GENERATORS);\n  }\n\n  // getGenerator(idx: number): Generator{\n  //   return GENERATORS[idx];\n  // }\n\n  getGenerator(component: string): Generator{\n\n    for (let item of GENERATORS){\n\n      if(item.link == component){\n        return item;\n      }\n\n    }\n\n    return null;    \n  }\n\n}\n","module.exports = \" .scriptarea{\\r\\n    width: 100%;\\r\\n    height: 500px;\\r\\n    resize: none;\\r\\n    background-color: #ffffff;\\r\\n}\\r\\n\\r\\n.popupControlBox{\\r\\n    align-self: center;\\r\\n}\\r\\n\\r\\n.popupControlBox button{\\r\\n    margin: 0px 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWxzY3JpcHQvbW9kYWxzY3JpcHQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQztJQUNHLFdBQVc7SUFDWCxhQUFhO0lBQ2IsWUFBWTtJQUNaLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQztJQUNHLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9tb2RhbHNjcmlwdC9tb2RhbHNjcmlwdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIC5zY3JpcHRhcmVhe1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgcmVzaXplOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxufVxyXG5cclxuLnBvcHVwQ29udHJvbEJveHtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxufVxyXG5cclxuIC5wb3B1cENvbnRyb2xCb3ggYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwcHggNXB4O1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { ExportService } from '../export.service';\nimport { ScriptService } from '../script.service';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-modalscript',\n  templateUrl: './modalscript.component.html',\n  styleUrls: ['./modalscript.component.css']\n})\nexport class ModalscriptComponent implements OnInit {\n\n  constructor(private appcomponent: AppComponent,\n    private scriptservice: ScriptService,\n    private exportService: ExportService) {\n    interval(1000).subscribe(x => this.generatedScript = this.scriptservice.GetScript());\n    interval(500).subscribe(y => this.enableBtn = (this.generatedScript == ''));\n  }\n\n  pageTitleModal: string = '';\n  generatedScript: string = '';\n  copyMessage: string = '';\n  isMobileDevice: boolean = this.appcomponent.isMobileDevice;\n  enableBtn: boolean = true;\n\n  ngOnInit() {\n    this.pageTitleModal = this.appcomponent.pageTitle;\n  }\n\n  openScript(): void {\n    this.generatedScript = this.scriptservice.GetScript();\n  }\n\n  //######################\n\n  copyGeneratedScript(): void {\n    this.exportService.copyGeneratedScript(this.generatedScript);\n    this.copyMessage = this.exportService.setMessageCopyClipBoard();\n  }\n\n  cleanMessage(): void {\n    this.scriptservice.setScript(this.generatedScript);\n    this.copyMessage = this.exportService.cleanMessage();\n    this.wasGenerated();\n  }\n\n  dynamicDownloadTxt(): void {\n    this.exportService.dynamicDownloadTxt(this.generatedScript);\n    this.copyMessage = this.exportService.setMessageDownload();\n  }\n\n  //######################\n\n  wasGenerated() {\n    this.enableBtn = this.generatedScript == '';\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ld2N1YmUvbmV3Y3ViZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { GeneratorService } from '../generator.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NewcubeService } from './newcube.service';\nimport { Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-newcube',\n  templateUrl: './newcube.component.html',\n  styleUrls: ['./newcube.component.css']\n})\nexport class NewcubeComponent implements OnInit {\n  public form: FormGroup;\n  public columnList: FormArray; \n\n  constructor(\n    private appcomponent: AppComponent,\n    private generatorservice: GeneratorService,\n    private newcubeService: NewcubeService,\n    private fb: FormBuilder,\n    private renderer2: Renderer2,\n    @Inject(DOCUMENT) private _document\n  ) { }\n\n  generatorList = this.generatorservice.getGenerator(\"/newcube\");\n  getCommit: boolean = true;\n\n  ngOnInit() {\n    this.appcomponent.pageTitle = this.generatorList.name;\n    this.appcomponent.showCard = true;\n    this.newcubeService.cleanScript();\n\n    this.form = this.fb.group({\n      getcommit: [true],\n      viewname: [null, Validators.compose([Validators.required])],\n      visionname: [null, Validators.compose([Validators.required])],\n      modulename: [null, Validators.compose([Validators.required])],\n      note: [null],\n      setdefaultuser: [false],\n      username: ['inflor01', Validators.compose([Validators.required])],\n      setdefaultprofile: [true],\n      profilename: ['TOTAL', Validators.compose([Validators.required])],\n      column: this.fb.array([this.createColumnKey()])\n    });\n\n    this.columnList = this.form.get('column') as FormArray;\n\n    const s = this.renderer2.createElement('script');\n    s.type = 'text/javascript';\n    s.src = './assets/script/scripts.js';\n    this.renderer2.appendChild(this._document.body, s);\n\n    this.appcomponent.cdrMethod();\n  }\n\n  //#########################################################################################\n\n  createColumnKey(): FormGroup {\n    return this.fb.group({\n      columnname: [null, Validators.compose([Validators.required])],\n      format: ['TX'],\n      portuguese: [null, Validators.compose([Validators.required])],\n      english: [null, Validators.compose([Validators.required])],\n      spanish: [null, Validators.compose([Validators.required])],\n      columnbefore: [null]\n    });\n  }\n\n  addColumn() {\n    this.columnList.push(this.createColumnKey());\n    this.generateScript();\n  }\n\n  removeColumn(index) {\n    if (confirm(\"Are you sure to delete this column?\")) {\n      this.columnList.removeAt(index);\n      this.generateScript();\n    }\n  }\n\n  getColumnFormGroup(index): FormGroup {\n    const formGroup = this.columnList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  get columnFormGroup() {\n    return this.form.get('column') as FormArray;\n  }\n\n  //#########################################################################################\n\n  generateScript() {\n    this.newcubeService.generateScript(this.form, this.columnList);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ScriptInterface } from '../ScriptInterface';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { ScriptService } from '../script.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewcubeService implements ScriptInterface {\n  constructor(\n    private scriptservice: ScriptService\n  ) { }\n\n  generateScript(form: FormGroup, columnList: FormArray) {\n    var query = \"\";\n    var isCreated = \"N\";\n    var queryProcedure = \"\";\n    var queryDeclare = \"\";\n    var listColumnName = \"\";\n    var listColumnFormat = \"\";\n    var listColumnPort = \"\";\n    var listColumnEngl = \"\";\n    var listColumnSpan = \"\";\n    var listColumnPrevious = \"\";\n    var setDefaulProfile = false;\n    var setDefaultUser = false;\n\n\n    queryDeclare += \"DECLARE \\n\\n\";\n    queryDeclare += \"/*O index do varray é a quantidade de colunas a serem criados*/ \\n\";\n    queryDeclare += \"\\t type t_Coluna is varray(\" + columnList.controls.length + \") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\t type t_Anterior is varray(\" + columnList.controls.length + \") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\t type t_Traducao is varray(\" + columnList.controls.length + \") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\t type t_Formato is varray(\" + columnList.controls.length + \") of nvarchar2(100);\\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Declaração da variável de formato da coluna*/\\n\";\n    queryDeclare += \"\\t v_FormatoColunaCubo NVARCHAR2(50) := '';\\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Linguas cadastradas no sistema*/\\n\";\n    queryDeclare += \"\\t Cursor c_Language is (\\n\";\n    queryDeclare += \"\\t\\t Select CD_LANGUAGE\\n\";\n    queryDeclare += \"\\t\\t from INT_LANGUAGE\\n\";\n    queryDeclare += \"\\t );\\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"\\t v_cdPerfil\\t\\t\\t seg_perfil.cd_perfil%type;\\n\";\n    queryDeclare += \"\\t v_NomePerfilAssoc\\t\\t seg_perfil.dcr_perfil%type;\\n\";\n    queryDeclare += \"\\t v_NomeFisicoView\\t\\t CON_VISAO.dcr_nome_fisico%type;\\n\";\n    queryDeclare += \"\\t v_dcrVisao\\t\\t\\t CON_VISAO.DCR_VISAO%TYPE;\\n\";\n    queryDeclare += \"\\t v_dcrPrincipalModulo\\t CON_VISAO.DCR_PRINCIPAL_MODULO%TYPE;\\n\";\n    queryDeclare += \"\\t v_dcrObservacao\\t\\t CON_VISAO.DCR_OBSERVACAO%TYPE;\\n\";\n    queryDeclare += \"\\t v_dcrLogin\\t\\t\\t seg_usuario.dcr_login%type;  \\n\";\n    queryDeclare += \"\\t v_FlagAssociaPerfil\\t\\t nvarchar2(1);\\n\";\n    queryDeclare += \"\\t v_FlagAssociarUsuario\\t nvarchar2(1);\\n\";\n    queryDeclare += \"\\n\";\n\n    setDefaulProfile = (!form.value[\"setdefaultprofile\"] || (form.value[\"setdefaultprofile\"] && (form.value[\"profilename\"] != '' && form.value[\"profilename\"] != null)));\n    setDefaultUser = (!form.value[\"setdefaultuser\"] || (form.value[\"setdefaultuser\"] && (form.value[\"username\"] != '' && form.value[\"username\"] != null)));\n\nconsole.log(!form.value[\"setdefaultprofile\"]);\nconsole.log(form.value[\"profilename\"]);\nconsole.log(setDefaulProfile);\nconsole.log(!form.value[\"setdefaultuser\"]);\nconsole.log(form.value[\"username\"]);\nconsole.log(setDefaultUser);\n\n\n    for (let item of columnList.controls) {\n\n      if (form.value[\"viewname\"] != null &&\n        form.value[\"visionname\"] != null &&\n        form.value[\"modulename\"] != null &&\n        item.value[\"columnname\"] != null &&\n        item.value[\"format\"] != null &&\n        setDefaulProfile &&\n        setDefaultUser &&\n        item.value[\"portuguese\"] != null &&\n        item.value[\"spanish\"] != null &&\n        item.value[\"english\"] != null) {\n\n        listColumnName += \"'\" + item.value[\"columnname\"] + \"',\";\n        listColumnFormat += \"'\" + item.value[\"format\"] + \"',\";\n        listColumnPort += \"'\" + item.value[\"portuguese\"] + \"',\";\n        listColumnEngl += \"'\" + item.value[\"spanish\"] + \"',\";\n        listColumnSpan += \"'\" + item.value[\"english\"] + \"',\";\n        listColumnPrevious += \"'\" + (item.value[\"columnbefore\"] == null ? \"\" : item.value[\"columnbefore\"]) + \"',\";\n\n        isCreated = \"S\";\n      }\n      else\n      {\n        isCreated = \"N\";\n      }\n    }\n\n    queryDeclare += \"/*Nome(s) do(s) campo(s) novo(s)*/\\n\";\n    queryDeclare += \"\\t var_NovaColuna t_Coluna := t_Coluna(\" + listColumnName.slice(0, -1) + \");\\n\";\n    queryDeclare += \"/*Nome(s) da(s) colunas(s) onde a(s) nova(s) coluna(s) será(ão) adiciona(s) posteriormente*/\\n\";\n    queryDeclare += \"/*Deixar em branco caso queira adicionar ao fim do cubo*/\\n\";\n    queryDeclare += \"\\t var_ColunaAnterior t_Anterior := t_Anterior(\" + listColumnPrevious.slice(0, -1) + \");\\n\";\n    queryDeclare += \"/*Formato(s) do(s) campo(s) novo(s)*/\\n\";\n    queryDeclare += \"\\t var_NovoFormato t_Formato := t_Formato(\" + listColumnFormat.slice(0, -1) + \")\\n\";\n    queryDeclare += \"/*Tradução(ões) do(s) campo(s) novo(s)*/\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoPt t_Traducao := t_Traducao(\" + listColumnPort.slice(0, -1) + \")\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoEs t_Traducao := t_Traducao(\" + listColumnSpan.slice(0, -1) + \")\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoEn t_Traducao := t_Traducao(\" + listColumnEngl.slice(0, -1) + \")\\n\";\n    queryDeclare += \"\\t var_NovaTraducaoZh t_Traducao := t_Traducao(\" + listColumnEngl.slice(0, -1) + \")\\n\";\n    queryDeclare += \"/*### SE PRECISAR ADICIONAR OUTRO IDIOMA QUE NÃO ESTEJA AQUI, DEVE SER CRIADO UM NOVO CURSOR E ADICIONAR ELE NO LOOP NO FINAL DO SCRIPT ###*/ \\n\";\n    queryDeclare += \"\\n\";\n    queryDeclare += \"/*Variável para controle da visão*/\\n\";\n    queryDeclare += \"\\t v_ExisteVisao number := 0;\\n\";\n    queryDeclare += \"\\n\";\n\n    queryProcedure += \"BEGIN\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Defini os valores das variáveis do cubo*/\\n\";\n    queryProcedure += \"\\t v_NomeFisicoView := '\" + form.value[\"viewname\"] + \"';\\n\";\n    queryProcedure += \"\\t v_dcrVisao := '\" + form.value[\"visionname\"] + \"';\\n\";\n    queryProcedure += \"\\t v_dcrPrincipalModulo := '\" + form.value[\"modulename\"] + \"';\\n\";\n    queryProcedure += \"\\t v_dcrObservacao := '\" + form.value[\"note\"] + \"';\\n\";\n    queryProcedure += \"\\t v_FlagAssociaPerfil := '\" + (form.value[\"setdefaultprofile\"] ? \"S\" : \"N\") + \"';\\n\";\n    queryProcedure += \"\\t v_NomePerfilAssoc := '\" + form.value[\"profilename\"] + \"';\\n\";\n    queryProcedure += \"\\t v_FlagAssociarUsuario := '\" + (form.value[\"setdefaultuser\"] ? \"S\" : \"N\") + \"';\\n\";\n    queryProcedure += \"\\t v_dcrLogin := '\" + form.value[\"username\"] + \"';\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*0- Verificar se existe a Visão cadastrada. 0=Cria a visão | 0<Atualiza a visão atual*/\\n\";\n    queryProcedure += \"\\t select \tcount(1)\\n\";\n    queryProcedure += \"\\t into \tv_ExisteVisao\\n\";\n    queryProcedure += \"\\t from \tcon_visao\\n\";\n    queryProcedure += \"\\t where \tupper(trim(dcr_nome_fisico)) = upper(trim(v_NomeFisicoView));\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t if (v_ExisteVisao = 0) then\\n\";\n    queryProcedure += \"/*1- Insere a nova visão*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Cria a nova visão é o novo relatório cubo*/\\n\";\n    queryProcedure += \"\\t\\t PR_NOVA_VISAO_CUBO (p_dcr_nome_fisico\\t\\t\\t=> v_NomeFisicoView,\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t p_dcr_visao\\t\\t\\t\\t=> v_dcrVisao,\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t p_dcr_principal_modulo\\t\\t=> v_dcrPrincipalModulo,\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t p_dcr_observacao\\t\\t\\t=> v_dcrObservacao,\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t p_dcr_filtro_sql\\t\\t\\t=> null,\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t p_flag_filtro_fornecedor\\t\\t=> 'N',\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t p_flag_filtro_unidade_gestao\\t=> 'N');\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Define todas as colunas para serem visiveis no relatório*/\\n\";\n    queryProcedure += \"\\t\\t update adm_campo_relatorio\\n\";\n    queryProcedure += \"\\t\\t set\\t flag_visivel = 'S'\\n\";\n    queryProcedure += \"\\t\\t where cd_relatorio = (select\\t r.cd_relatorio\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t   from\\t adm_relatorio r\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t   inner join con_visao v on v.cd_visao = r.cd_visao\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t   where\\t v.dcr_nome_fisico = v_NomeFisicoView);\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Por padrão é inserido o inflor01, caso queira que mude, define a flag para S*/\\n\";\n    queryProcedure += \"\\t\\t If (v_FlagAssociarUsuario = 'S') then\\n\";\n    queryProcedure += \"\\t\\t\\t BEGIN\\n\";\n    queryProcedure += \"\\t\\t\\t\\t update \tadm_relatorio\\n\";\n    queryProcedure += \"\\t\\t\\t\\t set \tcd_usuario = (select cd_usuario from seg_usuario where dcr_login = v_dcrLogin)\\n\";\n    queryProcedure += \"\\t\\t\\t\\t where   cd_relatorio = (select\\t r.cd_relatorio\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  from\\t adm_relatorio r\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  inner join con_visao v on v.cd_visao = r.cd_visao\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  where\\t v.dcr_nome_fisico = v_NomeFisicoView); \\n\";\n    queryProcedure += \"\\t\\t\\t EXCEPTION\\n\";\n    queryProcedure += \"\\t\\t\\t\\t WHEN OTHERS THEN\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t NULL; /*Se não encontrar o usuário, não associa*/\\n\";\n    queryProcedure += \"\\t\\t\\t END;\\n\";\n    queryProcedure += \"\\t\\t end if;\t\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Se for para associar um perfil default*/\\n\";\n    queryProcedure += \"\\t\\t if (v_FlagAssociaPerfil = 'S') then\\n\";\n    queryProcedure += \"\\t\\t\\t BEGIN\\n\";\n    queryProcedure += \"\\t\\t\\t\\t select CD_PERFIL \\n\";\n    queryProcedure += \"\\t\\t\\t\\t into v_cdPerfil\\n\";\n    queryProcedure += \"\\t\\t\\t\\t from seg_perfil \\n\";\n    queryProcedure += \"\\t\\t\\t\\t where UPPER(dcr_perfil) = upper(v_NomePerfilAssoc);\\n\";\n    queryProcedure += \"\\n\";\n    queryProcedure += \"\\t\\t\\t\\t INSERT INTO  ADM_PERFIL_RELATORIO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t (CD_PERFIL_RELATORIO,CD_UNIDADE,CD_RELATORIO,CD_PERFIL,EST_REG,DATA_REG )\\n\";\n    queryProcedure += \"\\t\\t\\t\\t (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t SELECT  S_ADM_PERFIL_RELATORIO.NEXTVAL, R.CD_UNIDADE, R.CD_RELATORIO, v_cdPerfil, 'A', SYSDATE\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t FROM    ADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t INNER JOIN CON_VISAO V\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\tON V.CD_VISAO         = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t WHERE  V.DCR_NOME_FISICO = v_NomeFisicoView\\n\";\n    queryProcedure += \"\\t\\t\\t\\t );     \\n\";\n    queryProcedure += \"\\n\";\n    queryProcedure += \"\\t\\t\\t EXCEPTION\\n\";\n    queryProcedure += \"\\t\\t\\t\\t WHEN OTHERS THEN\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t NULL; /*se não encontrar o perfil, não associa*/\\n\";\n    queryProcedure += \"\\t\\t\\t END;\\n\";\n    queryProcedure += \"\\t\\t END IF; \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*1- Insere a nova visão*/\\n\";\n    queryProcedure += \"\\t else\\n\"\n    queryProcedure += \"/*1- Atualiza estrutura do cubo*/\\n\\n\";\n    queryProcedure += \"\\t\\t PR_ATUALIZA_ESTRUTURA_CUBO(v_NomeFisicoView); \\n\\n\";\n    queryProcedure += \"/*1- Atualiza estrutura do cubo*/\\n\";\n    queryProcedure += \"\\t end if;\\n\"\n    queryProcedure += \"/*0- Verificar se existe a Visão cadastrada. 0=Cria a visão | 0<Atualiza a visão atual*/\\n\";\n    queryProcedure += \"\\n\\n\"\n    queryProcedure += \"/*2- Loop pelos campos novos do cubo*/\\n\";\n    queryProcedure += \"\\t for i in 1..var_NovaColuna.count loop    \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*Limpo a coluna de formato para o novo loop*/\\n\";\n    queryProcedure += \"\\t\\t v_FormatoColunaCubo := '';\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*3- Seleciona qual o formato da coluna*/    \\n\";\n    queryProcedure += \"\\t\\t select \\n\";\n    queryProcedure += \"\\t\\t\\t case UPPER(TO_CHAR(var_NovoFormato(i)))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'DA' then 'dd/MM/yyyy' /*Apenas Data*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'NU' then '###' /*Número simples*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'DE' then '###,###' /*Número com casas decimais*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'MO' then '###,###,###.##' /*monetário*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'DH' then 'dd/MM/yyyy HH:mm:ss' /*Data e Hora*/\\n\";\n    queryProcedure += \"\\t\\t\\t\\t when 'HO' then 'HH:mm:ss' /*Apenas Hora*/   \\n\";\n    queryProcedure += \"\\t\\t\\t\\t WHEN 'TX' THEN NULL /*Texto padrão*/\\n\";\n    queryProcedure += \"\\t\\t\\t else\\n\";\n    queryProcedure += \"\\t\\t\\t\\t null /*Texto padrão*/\\n\";\n    queryProcedure += \"\\t\\t\\t end \\n\";\n    queryProcedure += \"\\t\\t into v_FormatoColunaCubo\\n\";\n    queryProcedure += \"\\t\\t from dual;    \\n\";\n    queryProcedure += \"/*3- Seleciona qual o formato da coluna*/    \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*4- define o formato da coluna*/\\n\";\n    queryProcedure += \"\\t\\t UPDATE CON_COLUNA_VISAO \\n\";\n    queryProcedure += \"\\t\\t SET DCR_FORMATO = v_FormatoColunaCubo \\n\";\n    queryProcedure += \"\\t\\t WHERE UPPER(DCR_CHAVE_TRADUCAO) = (v_NomeFisicoView || '.' || var_NovaColuna(i));        \\n\";\n    queryProcedure += \"/*4- define o formato da coluna*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*5- Passa a coluna para visivel*/\\n\";\n    queryProcedure += \"\\t\\t UPDATE ADM_CAMPO_RELATORIO CR\\n\";\n    queryProcedure += \"\\t\\t SET FLAG_VISIVEL = 'S'\\n\";\n    queryProcedure += \"\\t\\t WHERE EXISTS (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t SELECT \t1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t INNER JOIN \tCON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t INNER JOIN \tCON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND UPPER(CV.DCR_CHAVE_TRADUCAO) \t= (v_NomeFisicoView || '.' || var_NovaColuna(i))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeFisicoView\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND CR.CD_RELATORIO \t\t\t\t= R.CD_RELATORIO \\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t\\t AND CR.CD_COLUNA_VISAO \t\t\t\t= CV.CD_COLUNA_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t );\\n\";\n    queryProcedure += \"/*5- Passa a coluna para visivel*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*6- cadastrando a sequencia da nova coluna*/\\n\";\n    queryProcedure += \"\\t\\t UPDATE  ADM_CAMPO_RELATORIO\\n\";\n    queryProcedure += \"\\t\\t SET \tNUM_SEQUENCIA =\tdecode(var_ColunaAnterior(i), '',\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  SELECT \tmax(CR.NUM_SEQUENCIA) +\\n\"; 1\n    queryProcedure += \"\\t\\t\\t\\t\\t  FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tADM_CAMPO_RELATORIO  CR ON (CR.CD_RELATORIO = R.CD_RELATORIO AND CR.CD_COLUNA_VISAO = CV.CD_COLUNA_VISAO)\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeFisicoView\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t ),\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  SELECT \tCR.NUM_SEQUENCIA + 1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tCON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  INNER JOIN \tADM_CAMPO_RELATORIO  CR ON (CR.CD_RELATORIO = R.CD_RELATORIO AND CR.CD_COLUNA_VISAO = CV.CD_COLUNA_VISAO)\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  AND UPPER(CV.DCR_CHAVE_TRADUCAO) \t= (v_NomeFisicoView || '.' || var_ColunaAnterior(i))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t  AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeFisicoView\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t )\\n\";\n    queryProcedure += \"\\t\\t\\t\\t )\\n\";\n    queryProcedure += \"\\t\\t WHERE \tCD_COLUNA_VISAO = (\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t SELECT \tCV.CD_COLUNA_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t FROM \t\tADM_RELATORIO R\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t INNER JOIN CON_VISAO V \t\t\tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t INNER JOIN CON_COLUNA_VISAO CV \tON V.CD_VISAO = R.CD_VISAO\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t WHERE 1=1\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t AND UPPER(CV.DCR_CHAVE_TRADUCAO) \t= (v_NomeFisicoView || '.' || var_NovaColuna(i))\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t AND UPPER(V.DCR_NOME_FISICO) \t\t= v_NomeFisicoView\\n\";\n    queryProcedure += \"\\t\\t\\t\\t\\t GROUP BY CV.CD_COLUNA_VISAO\\n\";\n    queryProcedure += \"                 );        \\n\";\n    queryProcedure += \"/*6- cadastrando a sequencia da nova coluna*/        \\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"/*7- Loop para cadastrar as traduções*/\\n\";\n    queryProcedure += \"\\t\\t for f_Language in c_Language loop\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em português*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'PT' then            \\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeFisicoView || '.' || var_NovaColuna(i)), var_NovaTraducaoPt(i), 'S');        \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em espanhol*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'ES' then\\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeFisicoView || '.' || var_NovaColuna(i)), var_NovaTraducaoEs(i), 'S');  \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em inglês*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'EN' then\\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeFisicoView || '.' || var_NovaColuna(i)), var_NovaTraducaoEn(i), 'S');   \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t\\t /*Idiomas em chinês(ou inglês)*/\\n\";\n    queryProcedure += \"\\t\\t\\t if upper(SUBSTR(f_Language.cd_language, 1, 2)) = 'ZH' then\\n\";\n    queryProcedure += \"\\t\\t\\t\\t PR_ATUALIZA_INT_MESSAGE (f_Language.cd_language,(v_NomeFisicoView || '.' || var_NovaColuna(i)), var_NovaTraducaoZh(i), 'S'); \\n\";\n    queryProcedure += \"\\t\\t\\t end if;\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t\\t end loop;\\n\";\n    queryProcedure += \"/*7- Loop para cadastrar as traduções*/\\n\";\n    queryProcedure += \"\\n\"\n    queryProcedure += \"\\t end loop;\\n\";\n    queryProcedure += \"/*2- Loop pelos campos novos do cubo*/\\n\";\n    queryProcedure += \"\\n\"\n\n\n\n\n    query += queryDeclare + queryProcedure;\n\n    if (form.value[\"getcommit\"]) { query += \"/*Salva as mudanças*/\\n\\t Commit;\\n\\n\"; }\n\n    query += \"End;\";\n\n    if (isCreated == \"S\") \n      { this.scriptservice.setScript(query); }\n    else\n      { this.cleanScript(); }\n  }\n\n  cleanScript() {\n    this.scriptservice.cleanScript();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { GeneratorService } from '../generator.service';\nimport { PageService } from './page.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n\n  public form: FormGroup;\n  public pageList: FormArray;\n\n  constructor(\n    private appcomponent: AppComponent,\n    private generatorservice: GeneratorService,\n    private pageservice: PageService,\n    private fb: FormBuilder,\n    private renderer2: Renderer2,\n    @Inject(DOCUMENT) private _document\n  ) { }\n\n  generatorList = this.generatorservice.getGenerator(\"/page\");\n\n  ngOnInit() {\n    this.appcomponent.pageTitle = this.generatorList.name;\n    this.appcomponent.showCard = true;\n\n    this.form = this.fb.group({\n      getcommit: [true],\n      page: this.fb.array([this.createPage()])\n    });\n\n    this.pageList = this.form.get('page') as FormArray;\n\n    const s = this.renderer2.createElement('script');\n    s.type = 'text/javascript';\n    s.src = './assets/script/scripts.js';\n    this.renderer2.appendChild(this._document.body, s);\n\n    this.appcomponent.cdrMethod();\n  }\n\n  //#########################################################################################\n\n  createPage(): FormGroup {\n    return this.fb.group({\n      name: [null, Validators.compose([Validators.required])],\n      url: [null],\n      icon: [null],\n      abbrev: [null, Validators.compose([Validators.required])],\n      namespace: [null, Validators.compose([Validators.required])],\n      ismenu: [\"S\"],\n      pagetype: [\"T\"],\n      ordernum: [null],\n      portuguese: [null, Validators.compose([Validators.required])],\n      english: [null, Validators.compose([Validators.required])],\n      spanish: [null, Validators.compose([Validators.required])],\n      force: ['N']\n    });\n  }\n\n  addPage() {\n    this.pageList.push(this.createPage());\n    this.generateScript();\n  }\n\n  removePage(index) {\n\n    if (confirm(\"Are you sure to delete this \" + this.generatorList.name + \"?\")) {\n      this.pageList.removeAt(index);\n      this.generateScript();\n    }\n  }\n\n  getPageFormGroup(index): FormGroup {\n    const formGroup = this.pageList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  get pageFormGroup() {\n    return this.form.get('page') as FormArray;\n  }\n\n  //#########################################################################################\n\n  generateScript() {\n    this.pageservice.generateScript(this.form, this.pageList);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ScriptInterface } from '../ScriptInterface';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { ScriptService } from '../script.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageService implements ScriptInterface {\n\n\n  constructor(\n    private scriptservice: ScriptService\n  ) { }\n\n  generateScript(form: FormGroup, pageList: FormArray) {\n    let languages: string[] = ['pt-BR', 'pt-PT', 'en-US', 'en-GB', 'es-UY', 'zh-CN'];\n    var query = \"\";\n    var isCreated = \"N\";\n    var queryProcedure = \"\";\n    var queryTranducao = \"\";\n\n    query += \"Begin\\n\\n\"\n\n    for (let item of pageList.controls) {\n\n    queryProcedure += \"\\t /*Add page*/\\n\";\n    queryTranducao = \"\\t /*Add Translater*/\\n\";\n\n      if (item.value[\"name\"] != null &&\n        item.value[\"abbrev\"] != null &&\n        item.value[\"portuguese\"] != null &&\n        item.value[\"english\"] != null &&\n        item.value[\"spanish\"] != null &&\n        item.value[\"namespace\"] != null) {\n\n\n        /*########################*/\n        queryProcedure += \"\\t PR_SEG_INSERIR_FUNCAO(\";\n        queryProcedure += \"\\t P_DCR_NAMESPACE\\t=> '\" + item.value[\"namespace\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_TIP_FUNCAO\\t\\t=> '\" + item.value[\"pagetype\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_FLAG_MENU\\t\\t=> '\" + item.value[\"ismenu\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_DCR_FUNCAO\\t\\t=> '\" + item.value[\"name\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_ABREV_FUNCAO\\t\\t=> '\" + item.value[\"abbrev\"] + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_NUM_ORDEM\\t\\t=> '\" + (item.value[\"ordernum\"] == null ? \"\" : item.value[\"ordernum\"]) + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_DCR_URL\\t\\t\\t=> '\" + (item.value[\"url\"] == null ? \"\" : item.value[\"url\"]) + \"', \\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t P_DCR_PATH_ICONE\\t=> '\" + (item.value[\"icon\"] == null ? \"\" : item.value[\"icon\"]) + \"'\\n\";\n        queryProcedure += \"\\t\\t\\t\\t\\t\\t\\t);\\n\";\n        queryProcedure += \"\\n\\n\";\n\n\n        /*########################*/\n        for (var idx in languages) {\n          queryTranducao += \"\\t PR_ATUALIZA_SEG_FUNCAO_IDIOMA(\";\n          queryTranducao += \"\\t p_dcr_url\\t\\t\\t=> '\" + (item.value[\"url\"] == null ? \"\" : item.value[\"url\"]) + \"', \\n\";\n          queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_dcr_namespace\\t\\t=> '\" + item.value[\"namespace\"] + \"', \\n\";\n          queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_cd_language\\t\\t=> '\" + languages[idx] + \"', \\n\";\n\n          switch (languages[idx].substr(0,2)) \n          {\n            case 'pt':\n              queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_dcr_funcao\\t\\t\\t=> '\" + item.value[\"portuguese\"] + \"', \\n\";\n              break;\n            case 'en': case 'zh':\n              queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_dcr_funcao\\t\\t\\t=> '\" + item.value[\"english\"] + \"', \\n\";\n              break;\n            case 'es':\n              queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_dcr_funcao\\t\\t\\t=> '\" + item.value[\"spanish\"] + \"', \\n\";\n              break;\n            default:\n              queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_dcr_funcao\\t\\t\\t=> '\" + item.value[\"name\"] + \"', \\n\";\n              break;\n          }\n\n          queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_abrev_funcao\\t\\t=> '\" + item.value[\"abbrev\"] + \"', \\n\";\n          queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t p_flag_forcar_atualiz\\t=> '\" + item.value[\"force\"] + \"' \\n\";\n          queryTranducao += \"\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\";\n        }\n\n        queryProcedure += queryTranducao + \"/*####################################################################################*/\";\n\n        queryProcedure += \"\\n\\n\";\n\n        isCreated = \"S\";\n      }\n      else\n      {\n        isCreated = \"N\";\n      }\n\n    }\n\n    query += queryProcedure;\n\n    if (form.value[\"getcommit\"]) { query += \"\\t Commit;\\n\\n\"; }\n\n    query += \"End;\";\n\n    if (isCreated == \"S\") \n      { this.scriptservice.setScript(query); }\n    else\n      { this.cleanScript(); }\n  }\n\n  cleanScript() {\n    this.scriptservice.cleanScript();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcmFtZXRlci9wYXJhbWV0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { GeneratorService } from '../generator.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ParameterService } from './parameter.service';\n\nimport { Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-parameter',\n  templateUrl: './parameter.component.html',\n  styleUrls: ['./parameter.component.css']\n})\nexport class ParameterComponent implements OnInit {\n  public form: FormGroup;\n  public parameterList: FormArray;\n\n  constructor(\n    private appcomponent: AppComponent,\n    private generatorservice: GeneratorService,\n    private parameterservice: ParameterService,\n    private fb: FormBuilder,\n    private renderer2: Renderer2,\n    @Inject(DOCUMENT) private _document\n  ) { }\n\n  generatorList = this.generatorservice.getGenerator(\"/parameter\");\n\n  ngOnInit() {\n    this.appcomponent.pageTitle = this.generatorList.name;\n    this.appcomponent.showCard = true;\n    this.parameterservice.cleanScript();\n\n    this.form = this.fb.group({\n      getcommit: [true],\n      getbeginend: [true],\n      parameter: this.fb.array([this.createParameter()])\n    });\n\n    this.parameterList = this.form.get('parameter') as FormArray;\n\n    const s = this.renderer2.createElement('script');\n    s.src = './assets/script/scripts.js';\n    this.renderer2.appendChild(this._document.body, s);\n\n    this.appcomponent.cdrMethod();\n  }\n\n  //#########################################################################################\n\n  createParameter(): FormGroup {\n    return this.fb.group({\n      parameter: [null, Validators.compose([Validators.required])],\n      value: [null, Validators.compose([Validators.required])],\n      observation: [null, Validators.compose([Validators.required])],\n      isreviewed: [true],\n      globalparameter: [false]\n    });\n  }\n\n  addParameter() {\n    this.parameterList.push(this.createParameter());\n    this.generateScript();\n  }\n\n  removeParameter(index) {\n    if (confirm(\"Are you sure to delete this \" + this.generatorList.name + \"?\")) {\n      this.parameterList.removeAt(index);\n      this.generateScript();\n    }\n  }\n\n  getParameterFormGroup(index): FormGroup {\n    const formGroup = this.parameterList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n  get parameterFormGroup() {\n    return this.form.get('parameter') as FormArray;\n  }\n\n  //#########################################################################################\n\n  generateScript() {\n    this.parameterservice.generateScript(this.form, this.parameterList);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ScriptInterface } from '../ScriptInterface';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { ScriptService } from '../script.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ParameterService implements ScriptInterface {\n\n  constructor(\n    private scriptservice: ScriptService\n  ) { }\n\n  generateScript(form: FormGroup, translateList: FormArray) {\n    var queryProcedure = \"\\t /*Parametro*/\\n\";\n    var queryUpdate = \"\\t /*Revisa os registros*/\\n\";\n    var query = \"\";\n    var isGlobal = 'N';\n    var isReviewed = 'P'\n    var isCreated = \"N\";\n\n    if (form.value[\"getbeginend\"]) { query += \"Begin\\n\\n\"; }\n\n\n    for (let item of translateList.controls) {\n\n      if (item.value[\"parameter\"] != null &&\n        item.value[\"value\"] != null &&\n        item.value[\"observation\"] != null) {\n\n        if (item.value[\"globalparameter\"]) { isGlobal = \"S\"; }\n        else { isGlobal = \"N\"; }\n\n        queryProcedure += \"\\t PR_INSERE_SIS_PARAMETRO('\" + item.value[\"parameter\"] + \"', '\" + item.value[\"value\"] + \"', '\" + item.value[\"observation\"] + \"', '\" + isGlobal + \"'); \\n\";\n\n\n        if (item.value[\"isreviewed\"]) { isReviewed = \"R\"; }\n        else { isReviewed = \"P\"; }\n\n        queryUpdate += \"\\t UPDATE SIS_PARAMETRO SET TIP_REG = '\" + isReviewed + \"' WHERE DCR_PARAMETRO = '\" + item.value[\"parameter\"] + \"';\";\n        queryUpdate += \"\\n\";\n\n        isCreated = \"S\";\n      }\n      else\n      {\n        isCreated = \"N\";\n      }\n\n    }\n\n    query += queryProcedure + \"\\n\" + queryUpdate + \"\\n\";\n\n    if (form.value[\"getcommit\"]) { query += \"\\t Commit;\\n\\n\"; }\n\n    if (form.value[\"getbeginend\"]) { query += \"End;\"; }\n\n    if (isCreated == \"S\") \n      { this.scriptservice.setScript(query); }\n    else\n      { this.cleanScript(); }\n  }\n\n  cleanScript() {\n    this.scriptservice.cleanScript();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScriptService {\n\n  constructor() { }\n\n  private script: string = '';\n  \n  GetScript(): string{\n    return this.script;\n  }\n\n  setScript(value: string){\n    this.script = value;\n  }\n\n  cleanScript(){\n    this.script = '';\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zbGF0b3IvdHJhbnNsYXRvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { GeneratorService } from '../generator.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslatorService } from './translator.service';\nimport { Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-translator',\n  templateUrl: './translator.component.html',\n  styleUrls: ['./translator.component.css']\n})\nexport class TranslatorComponent implements OnInit {\n  public form: FormGroup;\n  public translateList: FormArray;  \n\n  constructor(\n    private appcomponent: AppComponent,\n    private generatorservice: GeneratorService,\n    private translatorservice: TranslatorService,\n    private fb: FormBuilder,\n    private renderer2: Renderer2,\n    @Inject(DOCUMENT) private _document\n  ) { }\n\n  generatorList = this.generatorservice.getGenerator(\"/translator\");\n  getCommit: boolean = true;\n  getBeginEnd: boolean = true;\n\n  ngOnInit() {\n    this.appcomponent.pageTitle = this.generatorList.name;\n    this.appcomponent.showCard = true;\n    this.translatorservice.cleanScript();\n\n    this.form = this.fb.group({\n      getcommit: [true],\n      getbeginend: [true],\n      translateKeys: this.fb.array([this.createTranslateKey()])\n    });\n\n    this.translateList = this.form.get('translateKeys') as FormArray;\n\n    const s = this.renderer2.createElement('script');\n    s.type = 'text/javascript';\n    s.src = './assets/script/scripts.js';\n    this.renderer2.appendChild(this._document.body, s);\n\n    this.appcomponent.cdrMethod();    \n  }\n\n\n  //#########################################################################################\n\n  createTranslateKey(): FormGroup{\n    return this.fb.group({\n      key: [null, Validators.compose([Validators.required])],\n      force: [true, Validators.compose([Validators.required])],\n      portuguese: [null, Validators.compose([Validators.required])],\n      english: [null, Validators.compose([Validators.required])],\n      spanish: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  //Pega todos os arrays\n  get translateFormGroup() {\n    return this.form.get('translateKeys') as FormArray;\n  }\n\n  addTranslatorKey(){\n    this.translateList.push(this.createTranslateKey());\n    this.generateScript();\n  }\n\n  removeTranslateKey(index){\n    if (confirm(\"Are you sure to delete this \" + this.generatorList.name + \"?\")) {\n      this.translateList.removeAt(index);\n      this.generateScript();\n    }\n  }  \n\n  getTranslateFormGroup(index): FormGroup {\n    const formGroup = this.translateList.controls[index] as FormGroup;\n    return formGroup;\n  }\n\n//#########################################################################################\n\n  generateScript(){\n    this.translatorservice.generateScript(this.form, this.translateList);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ScriptService } from '../script.service';\nimport { ScriptInterface } from '../ScriptInterface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslatorService implements ScriptInterface {\n\n  constructor(\n    private scriptservice: ScriptService\n  ) { }\n\n  generateScript(form: FormGroup, translateList: FormArray) {\n\n    var query = \"\";\n    var isForce = \"S\";\n    var isCreated = \"N\";\n\n    if (form.value[\"getbeginend\"]) { query += \"Begin\\n\\n\"; }\n\n    for (let item of translateList.controls) {\n\n      if (item.value[\"key\"] != null &&\n        item.value[\"portuguese\"] != null &&\n        item.value[\"english\"] != null &&\n        item.value[\"spanish\"] != null) {\n          \n        if (item.value[\"force\"]) { isForce = \"S\"; }\n        else { isForce = \"N\"; }\n\n        query += \"\\tPR_ATUALIZA_INT_MESSAGE('pt-BR', '\" + item.value[\"key\"] + \"', '\" + item.value[\"portuguese\"] + \"', '\" + isForce + \"'); \\n\";\n        query += \"\\tPR_ATUALIZA_INT_MESSAGE('pt-PT', '\" + item.value[\"key\"] + \"', '\" + item.value[\"portuguese\"] + \"', '\" + isForce + \"'); \\n\";\n        query += \"\\tPR_ATUALIZA_INT_MESSAGE('en-GB', '\" + item.value[\"key\"] + \"', '\" + item.value[\"english\"] + \"', '\" + isForce + \"'); \\n\";\n        query += \"\\tPR_ATUALIZA_INT_MESSAGE('en-US', '\" + item.value[\"key\"] + \"', '\" + item.value[\"english\"] + \"', '\" + isForce + \"'); \\n\";\n        query += \"\\tPR_ATUALIZA_INT_MESSAGE('zh-CN', '\" + item.value[\"key\"] + \"', '\" + item.value[\"english\"] + \"', '\" + isForce + \"'); \\n\";\n        query += \"\\tPR_ATUALIZA_INT_MESSAGE('es-UY', '\" + item.value[\"key\"] + \"', '\" + item.value[\"spanish\"] + \"', '\" + isForce + \"'); \\n\";\n        query += \"\\n\";\n\n\n        isCreated = \"S\";\n      }\n      else\n      {\n        isCreated = \"N\";\n      }\n\n    }\n\n    if (form.value[\"getcommit\"]) { query += \"\\tCommit;\\n\\n\"; }\n\n    if (form.value[\"getbeginend\"]) { query += \"End;\"; }\n\n    if (isCreated == \"S\") \n      { this.scriptservice.setScript(query); }\n    else\n      { this.cleanScript(); }\n  }\n\n  cleanScript() {\n    this.scriptservice.cleanScript();\n  }\n\n/*###################################################################################*/\n\n  createTranslate(fb: FormBuilder): FormGroup {\n    return fb.group({\n      portuguese: [null, Validators.compose([Validators.required])],\n      english: [null, Validators.compose([Validators.required])],\n      spanish: [null, Validators.compose([Validators.required])]\n    });\n  }\n}\n\nexport enum language {\n  portugueseBR = 'pt-BR',\n  portuguesePT = 'pt-PT',\n  englishUS = 'en-US',\n  englishGB = 'en-GB',\n  spanish = 'es-UY',\n  chinese = 'zh-CN',\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}